{"version":3,"sources":["Chart.js","state.js","index.js","App.js","Home.js","jsu.js","serviceWorker.js"],"names":["i","colors","logarithmicConfig","type","ticks","min","max","callback","value","index","values","Number","toString","afterBuildTicks","chartObj","push","children","style","View","margin","padding","width","t","Text","color","numberWithCommas","x","s","replace","decimal","length","slice","data","legend","title","logarithmic","options","display","text","datasets","label","fontSize","responsive","maintainAspectRatio","scales","yAxes","beginAtZero","position","labels","fontColor","boxWidth","marginTop","height","Line","BarChart","c","backgroundColor","hoverBackgroundColor","Bar","props","State","lastUpdated","search","ReactDOM","render","document","getElementById","serviceWorker","register","Country","lazy","covid19","require","App","Promise","all","getData","getTimeSeriesData","d","time","console","log","countries","top10","sort","a","b","confirmed","map","country","chartData","borderColor","borderWidth","lineChartData","aTotal","bTotal","locations","forEach","l","total","countryTimeData","sets","dates","Object","keys","location","y","Date","day","getDate","month","getMonth","format","fill","state","setState","date","allCases","allDeaths","deaths","allRecovered","recovered","filteredCountries","basename","ScrollView","contentContainerStyle","styles","container","accessibilityRole","target","href","Link","to","lineHeight","Suspense","fallback","Switch","Route","path","Redirect","ActivityIndicator","size","alignSelf","Component","StyleSheet","create","alignItems","minHeight","fontWeight","subscribe","updateSearch","filter","toLowerCase","includes","marginBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","Box","key","L","V","toDateString","flexDirection","justifyContent","LineChart","TextInput","borderRadius","paddingLeft","paddingRight","placeholder","onChangeText","moment","request","csv","Covid19","undefined","this","fetchData","addRemoteTimesSeries","addRemoteDailyReports","subtract","error","fromStream","get","json","resolve","reject","obj","lat","lon","lastUpdate","parseInt","then","groupBy","array","totalConfirmed","totalRecovered","totalDeaths","allConfirmed","result","added","j","entry","m","diff","add","dateObj","lastDate","groupByTimesSeries","grandTotal","root","module","exports","config","navigator","URL","process","window","origin","addEventListener","swUrl","isLocalhost","fetch","headers","response","contentType","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","message","Boolean","hostname","match","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.9c5f6d0c.chunk.js","sourcesContent":["import React from 'react';\nimport {Text, View} from 'react-native';\nimport {Bar, Line} from 'react-chartjs-2';\n\nexport const format = (i) => (i < 10 ? `0${i}` : i);\nexport const colors = [\n  '#ff0029',\n  '#377eb8',\n  '#7f80cd',\n  '#66a61e',\n  '#984ea3',\n  '#00d2d5',\n  '#ff7f00',\n  '#af8d00',\n  '#b3e900',\n  '#fec254',\n  '#ccebc5',\n  '#a63603',\n  '#016c59',\n  '#e7298a',\n  '#c994c7',\n  '#dfdf00',\n  '#df00df',\n  '#80ff80',\n];\nconst logarithmicConfig = {\n  type: 'logarithmic',\n  ticks: {\n    min: 0.1, //minimum tick\n    max: 1000, //maximum tick\n    callback: function (value, index, values) {\n      return Number(value.toString()); //pass tick values as a string into Number function\n    },\n  },\n  afterBuildTicks: function (chartObj) {\n    //Build ticks labelling as per your need\n    chartObj.ticks = [];\n    chartObj.ticks.push(0.1);\n    chartObj.ticks.push(1);\n    chartObj.ticks.push(10);\n    chartObj.ticks.push(100);\n    chartObj.ticks.push(1000);\n  },\n};\n\nexport const Box = ({children, style}) => (\n  <View\n    style={[\n      {\n        margin: 10,\n        padding: 10,\n        width: '80%',\n      },\n      style,\n    ]}>\n    {children}\n  </View>\n);\n\nexport const L = ({t}) => (\n  <Text\n    style={{\n      color: '#ddd',\n    }}>\n    {t}\n  </Text>\n);\nexport const V = ({t}) => (\n  <Text\n    style={{\n      color: '#fff',\n    }}>\n    {t}\n  </Text>\n);\n\nexport function numberWithCommas(x) {\n  const s = x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  if (x > 999) {\n    let decimal = '';\n    if (s.length > 4 && s.slice(-3) !== '000') {\n      decimal = `.${s.slice(-3)[0]}`;\n    }\n\n    return `${s.slice(0, s.length - 4)}${decimal}K`;\n  }\n  return s;\n}\n\nexport const LineChart = ({data, legend, title, logarithmic}) => {\n  const options = {\n    title: {\n      display: logarithmic || !!title,\n      text: logarithmic ? 'Logarithmic chart' : data.datasets[0].label,\n      fontSize: 20,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function (value, index, values) {\n              return numberWithCommas(value);\n            },\n          },\n        },\n      ],\n    },\n    legend: {\n      display: !!legend,\n      position: 'bottom',\n      labels: {\n        fontColor: 'white',\n        boxWidth: 20,\n        padding: 20,\n      },\n    },\n  };\n  return (\n    <View\n      style={{marginTop: 20, height: 450, width: '100%', position: 'relative'}}>\n      <Line\n        data={data}\n        options={logarithmic ? {...logarithmicConfig, ...options} : options}\n      />\n    </View>\n  );\n};\nexport const BarChart = ({data, colors: c}) => {\n  data.datasets[0].backgroundColor = c || colors;\n  data.datasets[0].hoverBackgroundColor = c || colors;\n  return (\n    <View\n      style={{\n        marginTop: 20,\n        height: '40vh',\n        width: '100%',\n        position: 'relative',\n      }}>\n      <Bar\n        data={data}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  callback: function (value, index, values) {\n                    return numberWithCommas(value);\n                  },\n                },\n              },\n            ],\n          },\n          title: {\n            display: false,\n            // text: data.datasets[0].label,\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n            position: 'right',\n          },\n        }}\n      />\n    </View>\n  );\n};\n\n// const PieChart = ({data}) => {\n//   data.datasets[0].backgroundColor = colors;\n//   data.datasets[0].hoverBackgroundColor = colors;\n//   return (\n//     <View style={{width: '100%'}}>\n//       <Pie\n//         data={data}\n//         options={{\n//           title: {\n//             display: false,\n//             text: data.datasets[0].label,\n//             fontSize: 16,\n//           },\n//           legend: {\n//             display: false,\n//           },\n//           // legend: {\n//           //   display: true,\n//           //   position: 'right',\n//           // },\n//         }}\n//       />\n//       {/*\n//       <Doughnut\n//         data={data}\n//         options={{\n//           title: {\n//             display: true,\n//             text: 'Corona cases per country',\n//             fontSize: 20,\n//           },\n//           legend: {\n//             display: true,\n//             position: 'right',\n//           },\n//         }}\n//       /> */}\n//     </View>\n//   );\n// };\nconst Chart = (props) => {\n  return (\n    <>\n      <BarChart {...props} />\n      {/* <PieChart {...props} /> */}\n    </>\n  );\n};\nexport default Chart;\n","import {State} from 'jstates-react';\n\nconst state = new State('state', {\n  lastUpdated: null,\n  search: '',\n});\n\nexport default state;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {Component, lazy, Suspense} from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  ScrollView,\n} from 'react-native';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport {subscribe} from 'jstates-react';\nimport Home from './Home';\nimport {colors, format, numberWithCommas} from './Chart';\nimport state from './state';\n\nconst Country = lazy(() => import('./Country'));\n// import getData from './api';\n\nconst Covid19 = require('./jsu');\nconst covid19 = new Covid19();\n\nclass App extends Component {\n  async componentDidMount() {\n    const [d, time] = await Promise.all([\n      covid19.getData(),\n      covid19.getTimeSeriesData('confirmed'),\n    ]);\n    console.log('--¯_(ツ)_/¯-----------d----------', d);\n    console.log('--¯_(ツ)_/¯-----------time----------', time);\n\n    const countries = d.countries;\n\n    const top10 = countries\n      .sort((a, b) => b.confirmed - a.confirmed)\n      .slice(0, 6);\n\n    const labels = top10.map((i) => i.country);\n    const data = top10.map((i) => i.confirmed);\n    const chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Cases per country',\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data,\n        },\n      ],\n    };\n    const lineChartData = {\n      labels: [],\n      datasets: [],\n    };\n    const timeCountries = time.countries\n      .sort((a, b) => {\n        let aTotal = 0;\n        let bTotal = 0;\n        a.locations.forEach((l) => {\n          aTotal += l.total;\n        });\n        b.locations.forEach((l) => {\n          bTotal += l.total;\n        });\n\n        return bTotal - aTotal;\n      })\n      .slice(0, 10);\n\n    timeCountries.forEach((countryTimeData, index) => {\n      const sets = countryTimeData.locations[0].dates.map((i, index) => {\n        let total = 0;\n        const time = Object.keys(i)[0];\n        countryTimeData.locations.forEach((location) => {\n          total += location.dates[index][time];\n        });\n        return {y: time, x: total};\n      });\n      if (lineChartData.labels.length < 1) {\n        lineChartData.labels = sets.map((i) => {\n          const d = new Date(i.y.replace(/-/g, '/'));\n          const day = d.getDate();\n          const month = d.getMonth() + 1;\n\n          return `${format(day)}.${format(month)}`;\n        });\n      }\n      lineChartData.datasets.push({\n        label: countryTimeData.country,\n        borderColor: colors[index],\n        fill: false,\n        borderWidth: 1,\n        data: sets.map((i) => i.x),\n      });\n    });\n    state.setState({\n      lastUpdated: new Date(d.date.replace(/-/g, '/')),\n      allCases: numberWithCommas(d.confirmed),\n      allDeaths: numberWithCommas(d.deaths),\n      allRecovered: numberWithCommas(d.recovered),\n      countries,\n      filteredCountries: countries,\n      chartData,\n      time,\n      lineChartData,\n    });\n  }\n\n  render() {\n    const {lastUpdated} = state.state;\n\n    return (\n      <Router basename=\"/corona\">\n        <ScrollView contentContainerStyle={styles.container}>\n          <View style={styles.container}>\n            <Text\n              accessibilityRole=\"link\"\n              target=\"_blank\"\n              href=\"https://github.com/CSSEGISandData/COVID-19\"\n              style={[\n                styles.title,\n                {color: '#aaa', padding: 10, width: '100%'},\n              ]}>\n              COVID-19 data provided by Johns Hopkins CSSE\n            </Text>\n            {!lastUpdated ? (\n              <ActivityIndicator\n                size=\"large\"\n                style={{\n                  marginTop: 40,\n                  alignSelf: 'center',\n                }}\n              />\n            ) : (\n              <>\n                <Link to=\"/\">\n                  <Text\n                    style={[\n                      styles.title,\n                      {\n                        color: '#fff',\n                        padding: 10,\n                        width: '100%',\n                        backgroundColor: '#00429d',\n                        lineHeight: 35,\n                      },\n                    ]}>\n                    Go Back Home\n                  </Text>\n                </Link>\n\n                <Suspense fallback={<Text>Loading... </Text>}>\n                  <Switch>\n                    <Route path=\"/country/:country\">\n                      <Country />\n                    </Route>\n                    <Route path=\"/\">\n                      <Home />\n                    </Route>\n                    <Redirect to=\"/\" />\n                  </Switch>\n                </Suspense>\n              </>\n            )}\n          </View>\n        </ScrollView>\n      </Router>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default subscribe(App, [state]);\n","import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  TextInput,\n} from 'react-native';\nimport {Link} from 'react-router-dom';\nimport Chart, {LineChart, numberWithCommas, Box, L, V} from './Chart';\nimport state from './state';\n\nconst updateSearch = (search = '') => {\n  state.setState({search});\n  if (search.length) {\n    const filteredCountries = state.state.countries.filter((i) =>\n      i.country.toLowerCase().includes(search.toLowerCase()),\n    );\n    state.setState({filteredCountries});\n  } else {\n    state.setState({filteredCountries: state.state.countries});\n  }\n};\nconst Home = () => {\n  const {\n    lastUpdated,\n    lineChartData,\n    allCases,\n    allDeaths,\n    allRecovered,\n    filteredCountries,\n    search,\n    chartData,\n  } = state.state;\n\n  return (\n    <View style={styles.container}>\n      {!lastUpdated ? (\n        <ActivityIndicator\n          size=\"large\"\n          style={{\n            marginTop: 40,\n            alignSelf: 'center',\n          }}\n        />\n      ) : (\n        <>\n          <Box\n            style={{\n              borderBottomColor: '#fff',\n              borderBottomStyle: 'solid',\n              borderBottomWidth: 1,\n            }}>\n            <Text style={[styles.title, styles.text]}>Worldwide</Text>\n            <Text key={`Total cases: ${allCases}`} style={styles.text}>\n              <L t=\"Total cases: \" />\n              <V t={allCases} />\n            </Text>\n            <Text key={`Total deaths: ${allDeaths}`} style={styles.text}>\n              <L t=\"Total deaths: \" />\n              <V t={allDeaths} />\n            </Text>\n            <Text key={`Total recovered: ${allRecovered}`} style={styles.text}>\n              <L t=\"Total recovered: \" />\n              <V t={allRecovered} />\n            </Text>\n            <Text\n              key={`updated on: ${lastUpdated.toDateString()}`}\n              style={styles.text}>\n              <L t=\"Updated on: \" />\n              <V t={lastUpdated.toDateString()} />\n            </Text>\n          </Box>\n          <View\n            style={{\n              width: '80%',\n              marginBottom: 20,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Chart data={chartData} />\n            <LineChart data={lineChartData} legend />\n            {/* <LineChart data={lineChartData} legend logarithmic /> */}\n          </View>\n          <TextInput\n            style={{\n              height: 40,\n              borderColor: 'gray',\n              borderWidth: 1,\n              backgroundColor: '#ccc',\n              width: '80%',\n              borderRadius: 3,\n              paddingLeft: 8,\n              paddingRight: 8,\n            }}\n            placeholder=\"Type Country Name Here...\"\n            onChangeText={updateSearch}\n            value={search || ''}\n          />\n          <Box>\n            {filteredCountries.length < 1 ? (\n              <Text style={[styles.title, styles.text]}>\n                No counteries were found.. try another search term\n              </Text>\n            ) : (\n              filteredCountries.map(\n                ({country, confirmed, deaths, recovered}, index) => (\n                  <Link to={`/country/${country}`} key={index}>\n                    <View style={styles.country}>\n                      <Text style={[styles.title, styles.text]}>{country}</Text>\n                      <Text style={styles.text}>\n                        <L t=\"Cases:\" /> <V t={numberWithCommas(confirmed)} />\n                      </Text>\n                      <Text style={styles.text}>\n                        <L t=\"Deaths: \" />\n                        <V t={numberWithCommas(deaths)} />\n                      </Text>\n                      <Text style={styles.text}>\n                        <L t=\"Recovered: \" />\n                        <V t={numberWithCommas(recovered)} />\n                      </Text>\n                    </View>\n                  </Link>\n                ),\n              )\n            )}\n          </Box>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  text: {\n    color: '#fff',\n    marginBottom: 5,\n  },\n  country: {\n    width: '100%',\n    marginBottom: 10,\n    borderBottomColor: '#fff',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Home;\n","const moment = require('moment');\nconst request = require('request');\nconst csv = require('csvtojson');\n// const objectToFile = require('object-to-file');\nexport const d = {};\n// var objectToFiledb = new objectToFile.default('testing-runkit');\n// const db = {\n//   fetch: async (key) => {\n//     const r = localStorage.getItem(key);\n//     // const r = await objectToFiledb.read(key);\n//     return !r ? undefined : r;\n//   },\n//   set: async (key, data) => {\n//     // const r = await objectToFiledb.push(key, data);\n//     const r = localStorage.setItem(key, JSON.stringify(data));\n//     return !r ? undefined : r;\n//   },\n//   delete: async (key) => {\n//     const r = localStorage.removeItem(key);\n//     // const r = await objectToFiledb.delete(key);\n//     return !r ? undefined : r;\n//   },\n// };\n\nclass Covid19 {\n  async getData(date) {\n    let data = {};\n    if (date != undefined) {\n      date = moment(date, 'MM-DD-YYYY').format('MM-DD-YYYY');\n      data = await this.fetchData(date);\n    } else {\n      date = moment().format('MM-DD-YYYY');\n      data = await this.fetchData(date);\n    }\n    return data;\n  }\n\n  async getTimeSeriesData(type) {\n    var data = {};\n    let date = moment().format('MM-DD-YYYY');\n    type = type.toLowerCase();\n    data = d[type];\n    if (data === undefined || (data && data.lastUpdated !== date)) {\n      await this.addRemoteTimesSeries(type);\n      data = d[type];\n    }\n    return data;\n  }\n\n  async fetchData(date) {\n    var data = {};\n    //console.log(`Fetching data from: ${date}`)\n    data = d[date];\n    while (\n      data === undefined &&\n      moment(date, 'MM-DD-YYYY') >= moment('01-22-2020', 'MM-DD-YYYY')\n    ) {\n      //console.log(`LOCAL data from ${date} not found...attempting to fetch REMOTE data from ${date}`)\n      await this.addRemoteDailyReports(date);\n      data = d[date];\n      if (data == undefined) {\n        //console.log(`REMOTE data from ${date} not found...attempting to fetch LOCAL data from one day before.`)\n        date = moment(date, 'MM-DD-YYYY')\n          .subtract(1, 'days')\n          .format('MM-DD-YYYY');\n        data = d[date];\n        if (data === undefined) {\n          //console.log(`LOCAL data from ${date} not found...attempting to fetch REMOTE data from one day before.`)\n          await this.addRemoteDailyReports(date);\n          data = d[date];\n        }\n      }\n    }\n    if (data === undefined) {\n      data = {error: 'Data not found. Plase try again.'};\n    }\n    return data;\n  }\n\n  async addRemoteDailyReports(date) {\n    let locations = [];\n    await csv()\n      .fromStream(\n        request.get(\n          `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/${date}.csv`,\n        ),\n      )\n      .subscribe(async (json) => {\n        return new Promise((resolve, reject) => {\n          var obj = {};\n          if (\n            moment(date, 'MM-DD-YYYY') <= moment('03-22-2020', 'MM-DD-YYYY')\n          ) {\n            obj = {\n              country: json['Country/Region'] || '',\n              state: json['Province/State'] || '',\n              lat: json['Latitude'] || '0.0',\n              lon: json['Longitude'] || '0.0',\n              lastUpdate: json['Last Update'] || '',\n              confirmed: parseInt(json['Confirmed']) || 0,\n              deaths: parseInt(json['Deaths']) || 0,\n              recovered: parseInt(json['Recovered']) || 0,\n            };\n          } else {\n            // console.log('after 03-22-2020');\n            obj = {\n              country: json['Country_Region'] || '',\n              state: json['Province_State'] || '',\n              lat: json['Lat'] || '0.0',\n              lon: json['Long_'] || '0.0',\n              lastUpdate: json['Last_Update'] || '',\n              confirmed: parseInt(json['Confirmed']) || 0,\n              deaths: parseInt(json['Deaths']) || 0,\n              recovered: parseInt(json['Recovered']) || 0,\n            };\n          }\n          locations.push(obj);\n          resolve();\n        });\n      })\n      .then(async (json) => {\n        if (locations.length > 0) {\n          let countries = await this.groupBy('country', locations, date);\n          delete d[date];\n          d[date] = countries;\n        }\n      });\n  }\n\n  async groupBy(key, array, date) {\n    var json = {};\n    var result = [];\n    var totalConfirmed = 0;\n    var totalRecovered = 0;\n    var totalDeaths = 0;\n\n    var allConfirmed = 0;\n    var allRecovered = 0;\n    var allDeaths = 0;\n\n    json.countries = result;\n\n    for (var i = 0; i < array.length; i++) {\n      var added = false;\n      totalConfirmed = 0;\n      totalRecovered = 0;\n      totalDeaths = 0;\n\n      allConfirmed += parseInt(array[i].confirmed);\n      allRecovered += parseInt(array[i].recovered);\n      allDeaths += parseInt(array[i].deaths);\n\n      // adds the reset of the locations for the country\n      for (var j = 0; j < result.length; j++) {\n        if (result[j][key] == array[i][key]) {\n          totalConfirmed += parseInt(array[i].confirmed);\n          result[j].confirmed = totalConfirmed + parseInt(result[j].confirmed);\n\n          totalRecovered += parseInt(array[i].recovered);\n          result[j].recovered = totalRecovered + parseInt(result[j].recovered);\n\n          totalDeaths += parseInt(array[i].deaths);\n          result[j].deaths = totalDeaths + parseInt(result[j].deaths);\n\n          result[j].locations.push(array[i]);\n          added = true;\n          break;\n        }\n      }\n      // adds the first location for the country\n      if (!added) {\n        totalConfirmed = 0;\n        totalRecovered = 0;\n        totalDeaths = 0;\n        var entry = {locations: []};\n\n        totalConfirmed += parseInt(array[i].confirmed);\n        entry['confirmed'] = totalConfirmed;\n\n        totalRecovered += parseInt(array[i].recovered);\n        entry['recovered'] = totalRecovered;\n\n        totalDeaths += parseInt(array[i].deaths);\n        entry['deaths'] = totalDeaths;\n\n        entry[key] = array[i][key];\n        entry['lat'] = array[i]['lat'];\n        entry['lon'] = array[i]['lon'];\n\n        entry.locations.push(array[i]);\n        result.push(entry);\n      }\n    }\n\n    json.date = date;\n    json.confirmed = allConfirmed;\n    json.recovered = allRecovered;\n    json.deaths = allDeaths;\n\n    return json;\n  }\n\n  async addRemoteTimesSeries(type) {\n    var countries = [];\n    let min = moment('2020-03-11');\n    let max = moment();\n    //let initCapType = type.charAt(0).toUpperCase() + type.slice(1)\n    await csv()\n      .fromStream(\n        request.get(\n          `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_${type}_global.csv`,\n        ),\n      )\n      .subscribe(async (json) => {\n        return new Promise((resolve, reject) => {\n          var location = {\n            country: json['Country/Region'] || '',\n            state: json['Province/State'] || '',\n            lat: json['Lat'] || '0.0',\n            lon: json['Long'] || '0.0',\n          };\n          let dates = [];\n          for (\n            var m = moment(min);\n            m.diff(max, 'days') <= 0;\n            m.add(1, 'days')\n          ) {\n            let date = m.format('M/D/YY');\n            if (json[date] != undefined) {\n              let value = parseInt(json[date]) || 0;\n              let dateObj = {\n                [m.format('MM-DD-YYYY')]: value,\n              };\n              dates.push(dateObj);\n            }\n          }\n\n          if (dates.length > 0) {\n            let lastDate = dates[dates.length - 1];\n            location.total = Object.values(lastDate)[0];\n          }\n\n          location.dates = dates;\n          countries.push(location);\n          resolve();\n        });\n      })\n      .then(async (json) => {\n        if (countries.length > 0) {\n          countries = await this.groupByTimesSeries('country', countries);\n\n          delete d[type];\n          d[type] = countries;\n        }\n      });\n  }\n\n  async groupByTimesSeries(key, array) {\n    let root = {};\n    var locations = [];\n    var grandTotal = 0;\n\n    root.countries = locations;\n\n    for (var i = 0; i < array.length; i++) {\n      var total = 0;\n      var added = false;\n      // adds the reset of the locations for the country\n      for (var j = 0; j < locations.length; j++) {\n        if (locations[j][key] == array[i][key]) {\n          total += parseInt(array[i].total) || 0;\n          locations[j].locations.push(array[i]);\n          added = true;\n          break;\n        }\n      }\n      // adds the first location for the country\n      if (!added) {\n        var entry = {locations: []};\n        entry[key] = array[i][key];\n        entry['lat'] = array[i]['lat'];\n        entry['lon'] = array[i]['lon'];\n        total += parseInt(array[i]['total']) || 0;\n        entry.locations.push(array[i]);\n        locations.push(entry);\n      }\n\n      locations[j].total = total;\n      grandTotal += total;\n    }\n\n    root.lastUpdated = moment().format('MM-DD-YYYY');\n    root.total = grandTotal;\n    return root;\n  }\n}\n\nmodule.exports = Covid19;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}