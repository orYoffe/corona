{"version":3,"sources":["Chart.js","state.js","index.js","App.js","Country.js","Home.js","jsu.js","serviceWorker.js"],"names":["i","colors","logarithmicConfig","type","ticks","min","max","callback","value","index","values","Number","toString","afterBuildTicks","chartObj","push","children","style","View","margin","padding","width","t","Text","color","numberWithCommas","x","s","replace","decimal","length","slice","data","legend","title","logarithmic","options","display","text","datasets","label","fontSize","responsive","maintainAspectRatio","scales","yAxes","beginAtZero","position","labels","fontColor","boxWidth","marginTop","height","Line","BarChart","c","backgroundColor","hoverBackgroundColor","Bar","props","State","lastUpdated","search","ReactDOM","render","document","getElementById","serviceWorker","register","covid19","require","App","Promise","all","getData","getTimeSeriesData","d","time","console","log","countries","top10","sort","a","b","confirmed","map","country","chartData","borderColor","borderWidth","lineChartData","aTotal","bTotal","locations","forEach","l","total","countryTimeData","sets","dates","Object","keys","location","y","Date","day","getDate","month","getMonth","format","fill","state","setState","date","allCases","allDeaths","deaths","allRecovered","recovered","filteredCountries","basename","ScrollView","contentContainerStyle","styles","container","accessibilityRole","target","href","Link","to","lineHeight","Switch","Route","path","Redirect","ActivityIndicator","size","alignSelf","Component","StyleSheet","create","alignItems","minHeight","fontWeight","subscribe","marginBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","useParams","useState","barData","setBarData","dailyInfections","setDailyInfections","timeData","setTimeData","setCountryData","useEffect","find","countryData","daily","parseInt","dailyInfectionsData","Box","key","L","V","toDateString","LineChart","updateSearch","filter","toLowerCase","includes","flexDirection","justifyContent","TextInput","borderRadius","paddingLeft","paddingRight","placeholder","onChangeText","moment","request","csv","Covid19","undefined","this","fetchData","addRemoteTimesSeries","addRemoteDailyReports","subtract","error","fromStream","get","json","resolve","reject","obj","lat","lon","lastUpdate","then","groupBy","array","totalConfirmed","totalRecovered","totalDeaths","allConfirmed","result","added","j","entry","m","diff","add","dateObj","lastDate","groupByTimesSeries","grandTotal","root","module","exports","config","navigator","URL","process","window","origin","addEventListener","swUrl","isLocalhost","fetch","headers","response","contentType","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","message","Boolean","hostname","match","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess"],"mappings":"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","file":"static/js/main.647d74e2.chunk.js","sourcesContent":["import React from 'react';\nimport {Text, View} from 'react-native';\nimport {Bar, Line} from 'react-chartjs-2';\n\nexport const format = (i) => (i < 10 ? `0${i}` : i);\nexport const colors = [\n  '#ff0029',\n  '#377eb8',\n  '#7f80cd',\n  '#66a61e',\n  '#984ea3',\n  '#00d2d5',\n  '#ff7f00',\n  '#af8d00',\n  '#b3e900',\n  '#fec254',\n  '#ccebc5',\n  '#a63603',\n  '#016c59',\n  '#e7298a',\n  '#c994c7',\n  '#dfdf00',\n  '#df00df',\n  '#80ff80',\n];\nconst logarithmicConfig = {\n  type: 'logarithmic',\n  ticks: {\n    min: 0.1, //minimum tick\n    max: 1000, //maximum tick\n    callback: function (value, index, values) {\n      return Number(value.toString()); //pass tick values as a string into Number function\n    },\n  },\n  afterBuildTicks: function (chartObj) {\n    //Build ticks labelling as per your need\n    chartObj.ticks = [];\n    chartObj.ticks.push(0.1);\n    chartObj.ticks.push(1);\n    chartObj.ticks.push(10);\n    chartObj.ticks.push(100);\n    chartObj.ticks.push(1000);\n  },\n};\n\nexport const Box = ({children, style}) => (\n  <View\n    style={[\n      {\n        margin: 10,\n        padding: 10,\n        width: '80%',\n      },\n      style,\n    ]}>\n    {children}\n  </View>\n);\n\nexport const L = ({t}) => (\n  <Text\n    style={{\n      color: '#ddd',\n    }}>\n    {t}\n  </Text>\n);\nexport const V = ({t}) => (\n  <Text\n    style={{\n      color: '#fff',\n    }}>\n    {t}\n  </Text>\n);\n\nexport function numberWithCommas(x) {\n  const s = x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  if (x > 999) {\n    let decimal = '';\n    if (s.length > 4 && s.slice(-3) !== '000') {\n      decimal = `.${s.slice(-3)[0]}`;\n    }\n\n    return `${s.slice(0, s.length - 4)}${decimal}K`;\n  }\n  return s;\n}\n\nexport const LineChart = ({data, legend, title, logarithmic}) => {\n  const options = {\n    title: {\n      display: logarithmic || !!title,\n      text: logarithmic ? 'Logarithmic chart' : data.datasets[0].label,\n      fontSize: 20,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function (value, index, values) {\n              return numberWithCommas(value);\n            },\n          },\n        },\n      ],\n    },\n    legend: {\n      display: !!legend,\n      position: 'bottom',\n      labels: {\n        fontColor: 'white',\n        boxWidth: 20,\n        padding: 20,\n      },\n    },\n  };\n  return (\n    <View\n      style={{marginTop: 20, height: 450, width: '100%', position: 'relative'}}>\n      <Line\n        data={data}\n        options={logarithmic ? {...logarithmicConfig, ...options} : options}\n      />\n    </View>\n  );\n};\nexport const BarChart = ({data, colors: c}) => {\n  data.datasets[0].backgroundColor = c || colors;\n  data.datasets[0].hoverBackgroundColor = c || colors;\n  return (\n    <View\n      style={{\n        marginTop: 20,\n        height: '40vh',\n        width: '100%',\n        position: 'relative',\n      }}>\n      <Bar\n        data={data}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  callback: function (value, index, values) {\n                    return numberWithCommas(value);\n                  },\n                },\n              },\n            ],\n          },\n          title: {\n            display: false,\n            // text: data.datasets[0].label,\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n            position: 'right',\n          },\n        }}\n      />\n    </View>\n  );\n};\n\n// const PieChart = ({data}) => {\n//   data.datasets[0].backgroundColor = colors;\n//   data.datasets[0].hoverBackgroundColor = colors;\n//   return (\n//     <View style={{width: '100%'}}>\n//       <Pie\n//         data={data}\n//         options={{\n//           title: {\n//             display: false,\n//             text: data.datasets[0].label,\n//             fontSize: 16,\n//           },\n//           legend: {\n//             display: false,\n//           },\n//           // legend: {\n//           //   display: true,\n//           //   position: 'right',\n//           // },\n//         }}\n//       />\n//       {/*\n//       <Doughnut\n//         data={data}\n//         options={{\n//           title: {\n//             display: true,\n//             text: 'Corona cases per country',\n//             fontSize: 20,\n//           },\n//           legend: {\n//             display: true,\n//             position: 'right',\n//           },\n//         }}\n//       /> */}\n//     </View>\n//   );\n// };\nconst Chart = (props) => {\n  return (\n    <>\n      <BarChart {...props} />\n      {/* <PieChart {...props} /> */}\n    </>\n  );\n};\nexport default Chart;\n","import {State} from 'jstates-react';\n\nconst state = new State('state', {\n  lastUpdated: null,\n  search: '',\n});\n\nexport default state;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {Component} from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  ScrollView,\n} from 'react-native';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport {subscribe} from 'jstates-react';\nimport Country from './Country';\nimport Home from './Home';\nimport {colors, format, numberWithCommas} from './Chart';\nimport state from './state';\n\n// import getData from './api';\n\nconst Covid19 = require('./jsu');\nconst covid19 = new Covid19();\n\nclass App extends Component {\n  async componentDidMount() {\n    const [d, time] = await Promise.all([\n      covid19.getData(),\n      covid19.getTimeSeriesData('confirmed'),\n    ]);\n    console.log('--¯_(ツ)_/¯-----------d----------', d);\n    console.log('--¯_(ツ)_/¯-----------time----------', time);\n\n    const countries = d.countries;\n\n    const top10 = countries\n      .sort((a, b) => b.confirmed - a.confirmed)\n      .slice(0, 6);\n\n    const labels = top10.map((i) => i.country);\n    const data = top10.map((i) => i.confirmed);\n    const chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Cases per country',\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data,\n        },\n      ],\n    };\n    const lineChartData = {\n      labels: [],\n      datasets: [],\n    };\n    const timeCountries = time.countries\n      .sort((a, b) => {\n        let aTotal = 0;\n        let bTotal = 0;\n        a.locations.forEach((l) => {\n          aTotal += l.total;\n        });\n        b.locations.forEach((l) => {\n          bTotal += l.total;\n        });\n\n        return bTotal - aTotal;\n      })\n      .slice(0, 10);\n\n    timeCountries.forEach((countryTimeData, index) => {\n      const sets = countryTimeData.locations[0].dates.map((i, index) => {\n        let total = 0;\n        const time = Object.keys(i)[0];\n        countryTimeData.locations.forEach((location) => {\n          total += location.dates[index][time];\n        });\n        return {y: time, x: total};\n      });\n      if (lineChartData.labels.length < 1) {\n        lineChartData.labels = sets.map((i) => {\n          const d = new Date(i.y.replace(/-/g, '/'));\n          const day = d.getDate();\n          const month = d.getMonth() + 1;\n\n          return `${format(day)}.${format(month)}`;\n        });\n      }\n      lineChartData.datasets.push({\n        label: countryTimeData.country,\n        borderColor: colors[index],\n        fill: false,\n        borderWidth: 1,\n        data: sets.map((i) => i.x),\n      });\n    });\n    state.setState({\n      lastUpdated: new Date(d.date.replace(/-/g, '/')),\n      allCases: numberWithCommas(d.confirmed),\n      allDeaths: numberWithCommas(d.deaths),\n      allRecovered: numberWithCommas(d.recovered),\n      countries,\n      filteredCountries: countries,\n      chartData,\n      time,\n      lineChartData,\n    });\n  }\n\n  render() {\n    const {lastUpdated} = state.state;\n\n    return (\n      <Router basename=\"/corona\">\n        <ScrollView contentContainerStyle={styles.container}>\n          <View style={styles.container}>\n            <Text\n              accessibilityRole=\"link\"\n              target=\"_blank\"\n              href=\"https://github.com/CSSEGISandData/COVID-19\"\n              style={[\n                styles.title,\n                {color: '#aaa', padding: 10, width: '100%'},\n              ]}>\n              COVID-19 data provided by Johns Hopkins CSSE\n            </Text>\n            {!lastUpdated ? (\n              <ActivityIndicator\n                size=\"large\"\n                style={{\n                  marginTop: 40,\n                  alignSelf: 'center',\n                }}\n              />\n            ) : (\n              <>\n                <Link to=\"/\">\n                  <Text\n                    style={[\n                      styles.title,\n                      {\n                        color: '#fff',\n                        padding: 10,\n                        width: '100%',\n                        backgroundColor: '#00429d',\n                        lineHeight: 35,\n                      },\n                    ]}>\n                    Go Back Home\n                  </Text>\n                </Link>\n\n                <Switch>\n                  <Route path=\"/country/:country\">\n                    <Country />\n                  </Route>\n                  <Route path=\"/\">\n                    <Home />\n                  </Route>\n                  <Redirect to=\"/\" />\n                </Switch>\n              </>\n            )}\n          </View>\n        </ScrollView>\n      </Router>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default subscribe(App, [state]);\n","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, Text, View, ActivityIndicator} from 'react-native';\nimport {useParams} from 'react-router-dom';\nimport {\n  LineChart,\n  BarChart,\n  format,\n  numberWithCommas,\n  Box,\n  L,\n  V,\n} from './Chart';\nimport state from './state';\n\nconst Country = () => {\n  let {country} = useParams();\n  const [barData, setBarData] = useState(null);\n  const [dailyInfections, setDailyInfections] = useState(null);\n  const [timeData, setTimeData] = useState(null);\n  const [data, setCountryData] = useState(null);\n\n  useEffect(() => {\n    const {countries, time} = state.state;\n    const countryTimeData = time.countries.find((i) => i.country === country);\n    const countryData = countries.find((i) => i.country === country);\n    if (!countryData) {\n      setCountryData(0);\n    } else {\n      setCountryData(countryData);\n      const {confirmed, recovered, deaths} = countryData;\n      const barChartData = {\n        labels: ['Total', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: country,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 2,\n            data: [confirmed, recovered, deaths],\n          },\n        ],\n      };\n      setBarData(barChartData);\n    }\n    if (!countryTimeData) {\n      setTimeData(0);\n    } else {\n      const sets = countryTimeData.locations[0].dates.map((i, index) => {\n        let total = 0;\n        const time = Object.keys(i)[0];\n        countryTimeData.locations.forEach((location) => {\n          total += location.dates[index][time];\n        });\n        return {y: time, x: total};\n      });\n      const labels = sets.map((i) => {\n        const d = new Date(i.y.replace(/-/g, '/'));\n        const day = d.getDate();\n        const month = d.getMonth() + 1;\n\n        return `${format(day)}.${format(month)}`;\n      });\n      const lineChartData = {\n        labels,\n        datasets: [\n          {\n            label: 'Confirmed Cases',\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderWidth: 2,\n            data: sets.map((i) => i.x),\n          },\n        ],\n      };\n      setTimeData(lineChartData);\n      const daily = sets.map(\n        (i, index) =>\n          parseInt(i.x) - parseInt((sets[index - 1] && sets[index - 1].x) || 0),\n      );\n      const dailyInfectionsData = {\n        labels: labels.slice(1),\n        datasets: [\n          {\n            label: 'Daily Cases',\n            backgroundColor: '#d45757',\n            borderWidth: 2,\n            data: daily.slice(1),\n          },\n        ],\n      };\n      setDailyInfections(dailyInfectionsData);\n    }\n  }, [country]);\n\n  if (data === null) {\n    return (\n      <ActivityIndicator\n        size=\"large\"\n        style={{\n          marginTop: 40,\n          alignSelf: 'center',\n        }}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {data === 0 ? (\n        <Text style={[styles.title, styles.text]}>\n          No country by the name {country} was found\n        </Text>\n      ) : (\n        <>\n          <Box\n            style={{\n              borderBottomColor: '#fff',\n              borderBottomStyle: 'solid',\n              borderBottomWidth: 1,\n            }}>\n            <Text style={[styles.title, styles.text]}>{country}</Text>\n            <Text key={`Total cases: ${data.confirmed}`} style={styles.text}>\n              <L t=\"Total cases: \" />\n              <V t={numberWithCommas(data.confirmed)} />\n            </Text>\n            <Text key={`Total deaths: ${data.deaths}`} style={styles.text}>\n              <L t=\"Total deaths: \" />\n              <V t={numberWithCommas(data.deaths)} />\n            </Text>\n            <Text\n              key={`Total recovered: ${data.recovered}`}\n              style={styles.text}>\n              <L t=\"Total recovered: \" />\n              <V t={numberWithCommas(data.recovered)} />\n            </Text>\n            <Text\n              key={`updated on: ${state.state.lastUpdated.toDateString()}`}\n              style={styles.text}>\n              <L t=\"Updated on: \" />\n              <V t={state.state.lastUpdated.toDateString()} />\n            </Text>\n          </Box>\n          {!!timeData && (\n            <View style={{width: '80%', marginBottom: 20}}>\n              <LineChart data={timeData} title />\n              {dailyInfections && <LineChart data={dailyInfections} title />}\n              <BarChart\n                data={barData}\n                colors={['#ff2222', '#00ff00', '#ccc']}\n              />\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  text: {\n    color: '#fff',\n    marginBottom: 5,\n  },\n  country: {\n    width: '100%',\n    marginBottom: 10,\n    borderBottomColor: '#fff',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Country;\n","import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  TextInput,\n} from 'react-native';\nimport {Link} from 'react-router-dom';\nimport Chart, {LineChart, numberWithCommas, Box, L, V} from './Chart';\nimport state from './state';\n\nconst updateSearch = (search = '') => {\n  state.setState({search});\n  if (search.length) {\n    const filteredCountries = state.state.countries.filter((i) =>\n      i.country.toLowerCase().includes(search.toLowerCase()),\n    );\n    state.setState({filteredCountries});\n  } else {\n    state.setState({filteredCountries: state.state.countries});\n  }\n};\nconst Home = () => {\n  const {\n    lastUpdated,\n    lineChartData,\n    allCases,\n    allDeaths,\n    allRecovered,\n    filteredCountries,\n    search,\n    chartData,\n  } = state.state;\n\n  return (\n    <View style={styles.container}>\n      {!lastUpdated ? (\n        <ActivityIndicator\n          size=\"large\"\n          style={{\n            marginTop: 40,\n            alignSelf: 'center',\n          }}\n        />\n      ) : (\n        <>\n          <Box\n            style={{\n              borderBottomColor: '#fff',\n              borderBottomStyle: 'solid',\n              borderBottomWidth: 1,\n            }}>\n            <Text style={[styles.title, styles.text]}>Worldwide</Text>\n            <Text key={`Total cases: ${allCases}`} style={styles.text}>\n              <L t=\"Total cases: \" />\n              <V t={allCases} />\n            </Text>\n            <Text key={`Total deaths: ${allDeaths}`} style={styles.text}>\n              <L t=\"Total deaths: \" />\n              <V t={allDeaths} />\n            </Text>\n            <Text key={`Total recovered: ${allRecovered}`} style={styles.text}>\n              <L t=\"Total recovered: \" />\n              <V t={allRecovered} />\n            </Text>\n            <Text\n              key={`updated on: ${lastUpdated.toDateString()}`}\n              style={styles.text}>\n              <L t=\"Updated on: \" />\n              <V t={lastUpdated.toDateString()} />\n            </Text>\n          </Box>\n          <View\n            style={{\n              width: '80%',\n              marginBottom: 20,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Chart data={chartData} />\n            <LineChart data={lineChartData} legend />\n            {/* <LineChart data={lineChartData} legend logarithmic /> */}\n          </View>\n          <TextInput\n            style={{\n              height: 40,\n              borderColor: 'gray',\n              borderWidth: 1,\n              backgroundColor: '#ccc',\n              width: '80%',\n              borderRadius: 3,\n              paddingLeft: 8,\n              paddingRight: 8,\n            }}\n            placeholder=\"Type Country Name Here...\"\n            onChangeText={updateSearch}\n            value={search || ''}\n          />\n          <Box>\n            {filteredCountries.length < 1 ? (\n              <Text style={[styles.title, styles.text]}>\n                No counteries were found.. try another search term\n              </Text>\n            ) : (\n              filteredCountries.map(\n                ({country, confirmed, deaths, recovered}, index) => (\n                  <Link to={`country/${country}`} key={index}>\n                    <View style={styles.country}>\n                      <Text style={[styles.title, styles.text]}>{country}</Text>\n                      <Text style={styles.text}>\n                        <L t=\"Cases:\" /> <V t={numberWithCommas(confirmed)} />\n                      </Text>\n                      <Text style={styles.text}>\n                        <L t=\"Deaths: \" />\n                        <V t={numberWithCommas(deaths)} />\n                      </Text>\n                      <Text style={styles.text}>\n                        <L t=\"Recovered: \" />\n                        <V t={numberWithCommas(recovered)} />\n                      </Text>\n                    </View>\n                  </Link>\n                ),\n              )\n            )}\n          </Box>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  text: {\n    color: '#fff',\n    marginBottom: 5,\n  },\n  country: {\n    width: '100%',\n    marginBottom: 10,\n    borderBottomColor: '#fff',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Home;\n","const moment = require('moment');\nconst request = require('request');\nconst csv = require('csvtojson');\n// const objectToFile = require('object-to-file');\nexport const d = {};\n// var objectToFiledb = new objectToFile.default('testing-runkit');\n// const db = {\n//   fetch: async (key) => {\n//     const r = localStorage.getItem(key);\n//     // const r = await objectToFiledb.read(key);\n//     return !r ? undefined : r;\n//   },\n//   set: async (key, data) => {\n//     // const r = await objectToFiledb.push(key, data);\n//     const r = localStorage.setItem(key, JSON.stringify(data));\n//     return !r ? undefined : r;\n//   },\n//   delete: async (key) => {\n//     const r = localStorage.removeItem(key);\n//     // const r = await objectToFiledb.delete(key);\n//     return !r ? undefined : r;\n//   },\n// };\n\nclass Covid19 {\n  async getData(date) {\n    let data = {};\n    if (date != undefined) {\n      date = moment(date, 'MM-DD-YYYY').format('MM-DD-YYYY');\n      data = await this.fetchData(date);\n    } else {\n      date = moment().format('MM-DD-YYYY');\n      data = await this.fetchData(date);\n    }\n    return data;\n  }\n\n  async getTimeSeriesData(type) {\n    var data = {};\n    let date = moment().format('MM-DD-YYYY');\n    type = type.toLowerCase();\n    data = d[type];\n    if (data === undefined || (data && data.lastUpdated !== date)) {\n      await this.addRemoteTimesSeries(type);\n      data = d[type];\n    }\n    return data;\n  }\n\n  async fetchData(date) {\n    var data = {};\n    //console.log(`Fetching data from: ${date}`)\n    data = d[date];\n    while (\n      data === undefined &&\n      moment(date, 'MM-DD-YYYY') >= moment('01-22-2020', 'MM-DD-YYYY')\n    ) {\n      //console.log(`LOCAL data from ${date} not found...attempting to fetch REMOTE data from ${date}`)\n      await this.addRemoteDailyReports(date);\n      data = d[date];\n      if (data == undefined) {\n        //console.log(`REMOTE data from ${date} not found...attempting to fetch LOCAL data from one day before.`)\n        date = moment(date, 'MM-DD-YYYY')\n          .subtract(1, 'days')\n          .format('MM-DD-YYYY');\n        data = d[date];\n        if (data === undefined) {\n          //console.log(`LOCAL data from ${date} not found...attempting to fetch REMOTE data from one day before.`)\n          await this.addRemoteDailyReports(date);\n          data = d[date];\n        }\n      }\n    }\n    if (data === undefined) {\n      data = {error: 'Data not found. Plase try again.'};\n    }\n    return data;\n  }\n\n  async addRemoteDailyReports(date) {\n    let locations = [];\n    await csv()\n      .fromStream(\n        request.get(\n          `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/${date}.csv`,\n        ),\n      )\n      .subscribe(async (json) => {\n        return new Promise((resolve, reject) => {\n          var obj = {};\n          if (\n            moment(date, 'MM-DD-YYYY') <= moment('03-22-2020', 'MM-DD-YYYY')\n          ) {\n            obj = {\n              country: json['Country/Region'] || '',\n              state: json['Province/State'] || '',\n              lat: json['Latitude'] || '0.0',\n              lon: json['Longitude'] || '0.0',\n              lastUpdate: json['Last Update'] || '',\n              confirmed: parseInt(json['Confirmed']) || 0,\n              deaths: parseInt(json['Deaths']) || 0,\n              recovered: parseInt(json['Recovered']) || 0,\n            };\n          } else {\n            // console.log('after 03-22-2020');\n            obj = {\n              country: json['Country_Region'] || '',\n              state: json['Province_State'] || '',\n              lat: json['Lat'] || '0.0',\n              lon: json['Long_'] || '0.0',\n              lastUpdate: json['Last_Update'] || '',\n              confirmed: parseInt(json['Confirmed']) || 0,\n              deaths: parseInt(json['Deaths']) || 0,\n              recovered: parseInt(json['Recovered']) || 0,\n            };\n          }\n          locations.push(obj);\n          resolve();\n        });\n      })\n      .then(async (json) => {\n        if (locations.length > 0) {\n          let countries = await this.groupBy('country', locations, date);\n          delete d[date];\n          d[date] = countries;\n        }\n      });\n  }\n\n  async groupBy(key, array, date) {\n    var json = {};\n    var result = [];\n    var totalConfirmed = 0;\n    var totalRecovered = 0;\n    var totalDeaths = 0;\n\n    var allConfirmed = 0;\n    var allRecovered = 0;\n    var allDeaths = 0;\n\n    json.countries = result;\n\n    for (var i = 0; i < array.length; i++) {\n      var added = false;\n      totalConfirmed = 0;\n      totalRecovered = 0;\n      totalDeaths = 0;\n\n      allConfirmed += parseInt(array[i].confirmed);\n      allRecovered += parseInt(array[i].recovered);\n      allDeaths += parseInt(array[i].deaths);\n\n      // adds the reset of the locations for the country\n      for (var j = 0; j < result.length; j++) {\n        if (result[j][key] == array[i][key]) {\n          totalConfirmed += parseInt(array[i].confirmed);\n          result[j].confirmed = totalConfirmed + parseInt(result[j].confirmed);\n\n          totalRecovered += parseInt(array[i].recovered);\n          result[j].recovered = totalRecovered + parseInt(result[j].recovered);\n\n          totalDeaths += parseInt(array[i].deaths);\n          result[j].deaths = totalDeaths + parseInt(result[j].deaths);\n\n          result[j].locations.push(array[i]);\n          added = true;\n          break;\n        }\n      }\n      // adds the first location for the country\n      if (!added) {\n        totalConfirmed = 0;\n        totalRecovered = 0;\n        totalDeaths = 0;\n        var entry = {locations: []};\n\n        totalConfirmed += parseInt(array[i].confirmed);\n        entry['confirmed'] = totalConfirmed;\n\n        totalRecovered += parseInt(array[i].recovered);\n        entry['recovered'] = totalRecovered;\n\n        totalDeaths += parseInt(array[i].deaths);\n        entry['deaths'] = totalDeaths;\n\n        entry[key] = array[i][key];\n        entry['lat'] = array[i]['lat'];\n        entry['lon'] = array[i]['lon'];\n\n        entry.locations.push(array[i]);\n        result.push(entry);\n      }\n    }\n\n    json.date = date;\n    json.confirmed = allConfirmed;\n    json.recovered = allRecovered;\n    json.deaths = allDeaths;\n\n    return json;\n  }\n\n  async addRemoteTimesSeries(type) {\n    var countries = [];\n    let min = moment('2020-03-11');\n    let max = moment();\n    //let initCapType = type.charAt(0).toUpperCase() + type.slice(1)\n    await csv()\n      .fromStream(\n        request.get(\n          `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_${type}_global.csv`,\n        ),\n      )\n      .subscribe(async (json) => {\n        return new Promise((resolve, reject) => {\n          var location = {\n            country: json['Country/Region'] || '',\n            state: json['Province/State'] || '',\n            lat: json['Lat'] || '0.0',\n            lon: json['Long'] || '0.0',\n          };\n          let dates = [];\n          for (\n            var m = moment(min);\n            m.diff(max, 'days') <= 0;\n            m.add(1, 'days')\n          ) {\n            let date = m.format('M/D/YY');\n            if (json[date] != undefined) {\n              let value = parseInt(json[date]) || 0;\n              let dateObj = {\n                [m.format('MM-DD-YYYY')]: value,\n              };\n              dates.push(dateObj);\n            }\n          }\n\n          if (dates.length > 0) {\n            let lastDate = dates[dates.length - 1];\n            location.total = Object.values(lastDate)[0];\n          }\n\n          location.dates = dates;\n          countries.push(location);\n          resolve();\n        });\n      })\n      .then(async (json) => {\n        if (countries.length > 0) {\n          countries = await this.groupByTimesSeries('country', countries);\n\n          delete d[type];\n          d[type] = countries;\n        }\n      });\n  }\n\n  async groupByTimesSeries(key, array) {\n    let root = {};\n    var locations = [];\n    var grandTotal = 0;\n\n    root.countries = locations;\n\n    for (var i = 0; i < array.length; i++) {\n      var total = 0;\n      var added = false;\n      // adds the reset of the locations for the country\n      for (var j = 0; j < locations.length; j++) {\n        if (locations[j][key] == array[i][key]) {\n          total += parseInt(array[i].total) || 0;\n          locations[j].locations.push(array[i]);\n          added = true;\n          break;\n        }\n      }\n      // adds the first location for the country\n      if (!added) {\n        var entry = {locations: []};\n        entry[key] = array[i][key];\n        entry['lat'] = array[i]['lat'];\n        entry['lon'] = array[i]['lon'];\n        total += parseInt(array[i]['total']) || 0;\n        entry.locations.push(array[i]);\n        locations.push(entry);\n      }\n\n      locations[j].total = total;\n      grandTotal += total;\n    }\n\n    root.lastUpdated = moment().format('MM-DD-YYYY');\n    root.total = grandTotal;\n    return root;\n  }\n}\n\nmodule.exports = Covid19;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"sourceRoot":""}