{"version":3,"sources":["Country.js"],"names":["numberWithCommas","x","toString","replace","Box","children","style","View","styles","box","L","t","Text","label","V","value","StyleSheet","create","container","backgroundColor","alignItems","minHeight","width","margin","padding","title","color","fontWeight","fontSize","text","marginBottom","country","borderBottomColor","borderBottomStyle","borderBottomWidth","Value","useParams","useState","barData","setBarData","dailyInfections","setDailyInfections","timeData","setTimeData","data","setCountryData","useEffect","state","countries","countryTimeData","time","find","i","countryData","confirmed","recovered","deaths","labels","datasets","borderColor","borderWidth","sets","locations","dates","map","index","total","Object","keys","forEach","location","y","format","d","Date","day","getDate","month","getMonth","lineChartData","daily","parseInt","dailyInfectionsData","slice","ActivityIndicator","size","marginTop","alignSelf","key","lastUpdated","toDateString","LineChart","BarChart","colors"],"mappings":"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","file":"static/js/3.78b01b48.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {StyleSheet, Text, View, ActivityIndicator} from 'react-native';\nimport {useParams} from 'react-router-dom';\nimport {LineChart, BarChart} from './Chart';\nimport state from './state';\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst Box = ({children, style}) => (\n  <View style={[styles.box, style]}>{children}</View>\n);\n\nconst L = ({t}) => <Text style={styles.label}>{t}</Text>;\nconst V = ({t}) => <Text style={styles.value}>{t}</Text>;\n\nconst Country = () => {\n  let {country} = useParams();\n  const [barData, setBarData] = useState(null);\n  const [dailyInfections, setDailyInfections] = useState(null);\n  const [timeData, setTimeData] = useState(null);\n  const [data, setCountryData] = useState(null);\n\n  useEffect(() => {\n    const {countries, time} = state.state;\n    const countryTimeData = time.countries.find((i) => i.country === country);\n    const countryData = countries.find((i) => i.country === country);\n    if (!countryData) {\n      setCountryData(0);\n    } else {\n      setCountryData(countryData);\n      const {confirmed, recovered, deaths} = countryData;\n      const barChartData = {\n        labels: ['Total', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: country,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 2,\n            data: [confirmed, recovered, deaths],\n          },\n        ],\n      };\n      setBarData(barChartData);\n    }\n    if (!countryTimeData) {\n      setTimeData(0);\n    } else {\n      const sets = countryTimeData.locations[0].dates.map((i, index) => {\n        let total = 0;\n        const time = Object.keys(i)[0];\n        countryTimeData.locations.forEach((location) => {\n          total += location.dates[index][time];\n        });\n        return {y: time, x: total};\n      });\n      const format = (i) => (i < 10 ? `0${i}` : i);\n      const labels = sets.map((i) => {\n        const d = new Date(i.y.replace(/-/g, '/'));\n        const day = d.getDate();\n        const month = d.getMonth() + 1;\n\n        return `${format(day)}.${format(month)}`;\n      });\n      const lineChartData = {\n        labels,\n        datasets: [\n          {\n            label: 'Confirmed Cases',\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderWidth: 2,\n            data: sets.map((i) => i.x),\n          },\n        ],\n      };\n      setTimeData(lineChartData);\n      const daily = sets.map(\n        (i, index) =>\n          parseInt(i.x) - parseInt((sets[index - 1] && sets[index - 1].x) || 0),\n      );\n      const dailyInfectionsData = {\n        labels: labels.slice(1),\n        datasets: [\n          {\n            label: 'Daily Cases',\n            backgroundColor: '#d45757',\n            borderWidth: 2,\n            data: daily.slice(1),\n          },\n        ],\n      };\n      setDailyInfections(dailyInfectionsData);\n    }\n  }, [country]);\n\n  if (data === null) {\n    return (\n      <ActivityIndicator\n        size=\"large\"\n        style={{\n          marginTop: 40,\n          alignSelf: 'center',\n        }}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {data === 0 ? (\n        <Text style={[styles.title, styles.text]}>\n          No country by the name {country} was found\n        </Text>\n      ) : (\n        <>\n          <Box\n            style={{\n              borderBottomColor: '#fff',\n              borderBottomStyle: 'solid',\n              borderBottomWidth: 1,\n            }}>\n            <Text style={[styles.title, styles.text]}>{country}</Text>\n            <Text key={`Total cases: ${data.confirmed}`} style={styles.text}>\n              <L t=\"Total cases: \" />\n              <V t={numberWithCommas(data.confirmed)} />\n            </Text>\n            <Text key={`Total deaths: ${data.deaths}`} style={styles.text}>\n              <L t=\"Total deaths: \" />\n              <V t={numberWithCommas(data.deaths)} />\n            </Text>\n            <Text\n              key={`Total recovered: ${data.recovered}`}\n              style={styles.text}>\n              <L t=\"Total recovered: \" />\n              <V t={numberWithCommas(data.recovered)} />\n            </Text>\n            <Text\n              key={`updated on: ${state.state.lastUpdated.toDateString()}`}\n              style={styles.text}>\n              <L t=\"Updated on: \" />\n              <V t={state.state.lastUpdated.toDateString()} />\n            </Text>\n          </Box>\n          {!!timeData && (\n            <View style={{width: '80%', marginBottom: 20}}>\n              <LineChart data={timeData} title />\n              {dailyInfections && <LineChart data={dailyInfections} title />}\n              <BarChart\n                data={barData}\n                colors={['#ff2222', '#00ff00', '#ccc']}\n              />\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#282c34',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  box: {\n    margin: 10,\n    padding: 10,\n    width: '80%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  text: {\n    color: '#fff',\n    marginBottom: 5,\n  },\n  country: {\n    width: '100%',\n    marginBottom: 10,\n    borderBottomColor: '#fff',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 1,\n  },\n  label: {\n    color: '#ddd',\n  },\n  Value: {\n    color: '#fff',\n  },\n});\n\nexport default Country;\n"],"sourceRoot":""}