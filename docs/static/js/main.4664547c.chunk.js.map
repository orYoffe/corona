{"version":3,"sources":["index.js","App.js","Country.js","Home.js","Map.js","jsu.js","serviceWorker.js","Chart.js","state.js"],"names":["ReactDOM","render","document","getElementById","serviceWorker","register","covid19","require","App","Promise","all","getData","getTimeSeriesData","fetch","then","j","json","d","time","console","log","countryNamesExceptions","US","Iran","Russia","Czechia","Egypt","Slovakia","Kyrgyzstan","Venezuela","Brunei","Gambia","countries","map","country","countryPopulations","records","filter","i","countryName","fields","country_name","toLowerCase","length","countryPopulation","sort","a","b","year","value","newCountry","population","perc","confirmed","toFixed","precentage","top10","slice","labels","data","chartData","datasets","label","backgroundColor","borderColor","borderWidth","lineChartData","aTotal","bTotal","locations","forEach","l","total","countryTimeData","index","sets","dates","Object","keys","location","y","x","Date","replace","day","getDate","month","getMonth","format","push","colors","fill","state","setState","lastUpdated","date","allCases","numberWithCommas","allDeaths","deaths","allRecovered","recovered","filteredCountries","basename","ScrollView","contentContainerStyle","styles","container","View","style","Text","accessibilityRole","target","href","title","color","padding","width","Link","to","lineHeight","Switch","Route","path","Redirect","ActivityIndicator","size","marginTop","alignSelf","Component","StyleSheet","create","alignItems","minHeight","fontWeight","fontSize","subscribe","text","marginBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","useParams","useState","barData","setBarData","dailyInfections","setDailyInfections","timeData","setTimeData","setCountryData","useEffect","find","countryData","daily","parseInt","dailyInfectionsData","Box","key","L","t","V","toDateString","LineChart","BarChart","updateSearch","search","includes","justifyContent","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","flexDirection","legend","TextInput","paddingLeft","paddingRight","placeholder","onChangeText","textAlign","RED","lat","lng","zoom","React","createRef","mapRef","current","leafletElement","getZoom","this","position","Map","minZoom","ref","onzoomend","handleZoom","center","TileLayer","attribution","url","cords","coords","z","coord","Math","PI","lon","cos","sin","centrallon","atan2","centralSquareRoot","sqrt","averageGeolocation","point","confirmedWidth","recoveredWidth","deathsWidth","outerCircle","marginLeft","display","recoveredCircle","zIndex","margin","deathCircle","iconMarkup","renderToStaticMarkup","customMarkerIcon","divIcon","html","Marker","icon","Popup","moment","request","csv","Covid19","undefined","fetchData","type","addRemoteTimesSeries","addRemoteDailyReports","subtract","error","fromStream","get","resolve","reject","obj","lastUpdate","groupBy","array","totalConfirmed","totalRecovered","totalDeaths","allConfirmed","result","added","entry","min","max","m","diff","add","dateObj","lastDate","values","groupByTimesSeries","grandTotal","root","module","exports","config","navigator","URL","process","window","origin","addEventListener","swUrl","isLocalhost","headers","response","contentType","status","indexOf","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","message","Boolean","hostname","match","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","logarithmicConfig","ticks","callback","Number","toString","afterBuildTicks","chartObj","children","shouldRound","s","decimal","logarithmic","options","responsive","maintainAspectRatio","scales","yAxes","beginAtZero","fontColor","boxWidth","Line","c","hoverBackgroundColor","Bar","Pie","props","State"],"mappings":"+IAAA,UACA,WACA,OACA,gBACA,YAEAA,UAASC,OAAO,wBAAC,UAAD,MAASC,SAASC,eAAe,SAKjDC,EAAcC,Y,+OCXd,UACA,QAOA,SAOA,SACA,YACA,YACA,QACA,W,2kBAEA,IACMC,EAAU,IADAC,EAAQ,MAGlBC,E,wWAEyBC,QAAQC,IAAI,CACrCJ,EAAQK,UACRL,EAAQM,kBAAkB,aAC1BC,MACE,+IACAC,MAAK,SAACC,GAAD,OAAOA,EAAEC,Y,qCALXC,E,KAAGC,E,KAAMH,E,KAOhBI,QAAQC,IAAI,8CAAoCH,GAChDE,QAAQC,IAAI,iDAAuCF,GACnDC,QAAQC,IAAI,8CAAoCL,GAC1CM,EAAyB,CAC7BC,GAAI,gBACJC,KAAM,qBACNC,OAAQ,qBACR,eAAgB,cAChBC,QAAS,iBACTC,MAAO,mBACPC,SAAU,kBACVC,WAAY,kBACZC,UAAW,gBACXC,OAAQ,oBACRC,OAAQ,eAEJC,EAAYf,EAAEe,UAAUC,KAAI,SAACC,GACjC,IAAMC,EAAqBpB,EAAEqB,QAAQC,QAAO,SAACC,GAC3C,IAAMC,EAAcD,EAAEE,OAAOC,aAC7B,OACEF,EAAYG,gBAAkBR,EAAQA,QAAQQ,eAC9CH,IAAgBlB,EAAuBa,EAAQA,YAInD,IAAKC,EAAmBQ,OACtB,OAAOT,EAET,IAAMU,EAAoBT,EAAmBU,MAC3C,SAACC,EAAGC,GAAJ,OAAUA,EAAEP,OAAOQ,KAAOF,EAAEN,OAAOQ,QACnC,GACF,IAAKJ,IAAsBA,EAAkBJ,OAAOS,MAClD,OAAOf,EAET,IAAMgB,EAAU,KACXhB,EADW,CAEdiB,WAAYP,EAAkBJ,OAAOS,QAEjCG,GACHlB,EAAQmB,UAAYT,EAAkBJ,OAAOS,MAC9C,KACAK,QAAQ,GAIV,OAHIF,EAAO,KAAO,SAChBF,EAAWK,WAAaH,GAEnBF,KAGHM,EAAQxB,EACXa,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEM,UAAYP,EAAEO,aAC/BI,MAAM,EAAG,GAENC,EAASF,EAAMvB,KAAI,SAACK,GAAD,OAAOA,EAAEJ,WAC5ByB,EAAOH,EAAMvB,KAAI,SAACK,GAAD,OAAOA,EAAEe,aAC1BO,EAAY,CAChBF,SACAG,SAAU,CACR,CACEC,MAAO,oBACPC,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACbN,UAIAO,EAAgB,CACpBR,OAAQ,GACRG,SAAU,IAEU3C,EAAKc,UACxBa,MAAK,SAACC,EAAGC,GACR,IAAIoB,EAAS,EACTC,EAAS,EAQb,OAPAtB,EAAEuB,UAAUC,SAAQ,SAACC,GACnBJ,GAAUI,EAAEC,SAEdzB,EAAEsB,UAAUC,SAAQ,SAACC,GACnBH,GAAUG,EAAEC,SAGPJ,EAASD,KAEjBV,MAAM,EAAG,IAEEa,SAAQ,SAACG,EAAiBC,GACtC,IAAMC,EAAOF,EAAgBJ,UAAU,GAAGO,MAAM3C,KAAI,SAACK,EAAGoC,GACtD,IAAIF,EAAQ,EACNtD,EAAO2D,OAAOC,KAAKxC,GAAG,GAI5B,OAHAmC,EAAgBJ,UAAUC,SAAQ,SAACS,GACjCP,GAASO,EAASH,MAAMF,GAAOxD,MAE1B,CAAC8D,EAAG9D,EAAM+D,EAAGT,MAElBN,EAAcR,OAAOf,OAAS,IAChCuB,EAAcR,OAASiB,EAAK1C,KAAI,SAACK,GAC/B,IAAMrB,EAAI,IAAIiE,KAAK5C,EAAE0C,EAAEG,QAAQ,KAAM,MAC/BC,EAAMnE,EAAEoE,UACRC,EAAQrE,EAAEsE,WAAa,EAE7B,MAAM,GAAN,QAAU,IAAAC,QAAOJ,GAAjB,aAAyB,IAAAI,QAAOF,QAGpCpB,EAAcL,SAAS4B,KAAK,CAC1B3B,MAAOW,EAAgBvC,QACvB8B,YAAa0B,SAAOhB,GACpBiB,MAAM,EACN1B,YAAa,EACbN,KAAMgB,EAAK1C,KAAI,SAACK,GAAD,OAAOA,EAAE2C,UAG5BW,UAAMC,SAAS,CACbC,YAAa,IAAIZ,KAAKjE,EAAE8E,KAAKZ,QAAQ,KAAM,MAC3Ca,UAAU,IAAAC,kBAAiBhF,EAAEoC,WAC7B6C,WAAW,IAAAD,kBAAiBhF,EAAEkF,QAC9BC,cAAc,IAAAH,kBAAiBhF,EAAEoF,WACjCrE,YACAsE,kBAAmBtE,EACnB4B,YACA1C,OACAgD,kB,iIAIM,IACD4B,EAAeF,UAAMA,MAArBE,YAEP,OACE,wBAAC,gBAAD,CAAQS,SAAS,WACf,wBAAC,EAAAC,WAAD,CAAYC,sBAAuBC,EAAOC,WACxC,wBAAC,EAAAC,KAAD,CAAMC,MAAOH,EAAOC,WAClB,wBAAC,EAAAG,KAAD,CACEC,kBAAkB,OAClBC,OAAO,SACPC,KAAK,6CACLJ,MAAO,CACLH,EAAOQ,MACP,CAACC,MAAO,OAAQC,QAAS,GAAIC,MAAO,UANxC,gDAUEvB,EASA,gDACE,wBAAC,EAAAwB,KAAD,CAAMC,GAAG,KACP,wBAAC,EAAAT,KAAD,CACED,MAAO,CACLH,EAAOQ,MACP,CACEC,MAAO,OACPC,QAAS,GACTC,MAAO,OACPtD,gBAAiB,UACjByD,WAAY,MARlB,iBAeF,wBAAC,EAAAC,OAAD,KACE,wBAAC,EAAAC,MAAD,CAAOC,KAAK,qBACV,wBAAC,UAAD,OAEF,wBAAC,EAAAD,MAAD,CAAOC,KAAK,KACV,wBAAC,UAAD,OAEF,wBAAC,EAAAC,SAAD,CAAUL,GAAG,QAhCjB,wBAAC,EAAAM,kBAAD,CACEC,KAAK,QACLjB,MAAO,CACLkB,UAAW,GACXC,UAAW,mB,GA3JXC,aAkMZvB,EAASwB,aAAWC,OAAO,CAC/BxB,UAAW,CACT5C,gBAAiB,UACjBqE,WAAY,SACZC,UAAW,OACXhB,MAAO,QAETH,MAAO,CACLC,MAAO,OACPmB,WAAY,OACZC,SAAU,M,GAIC,IAAAC,WAAUhI,EAAK,CAACoF,Y,uICxO/B,UACA,QACA,SACA,QASA,WA6JMc,EAASwB,aAAWC,OAAO,CAC/BxB,UAAW,CACTyB,WAAY,SACZC,UAAW,OACXhB,MAAO,QAETH,MAAO,CACLC,MAAO,OACPmB,WAAY,OACZC,SAAU,IAEZE,KAAM,CACJtB,MAAO,OACPuB,aAAc,GAEhBxG,QAAS,CACPmF,MAAO,OACPqB,aAAc,GACdC,kBAAmB,OACnBC,kBAAmB,QACnBC,kBAAmB,K,EA/KP,WAAO,IAChB3G,GAAW,IAAA4G,aAAX5G,QADe,GAEU,IAAA6G,UAAS,MAFnB,qBAEbC,EAFa,KAEJC,EAFI,QAG0B,IAAAF,UAAS,MAHnC,qBAGbG,EAHa,KAGIC,EAHJ,QAIY,IAAAJ,UAAS,MAJrB,qBAIbK,EAJa,KAIHC,EAJG,QAKW,IAAAN,UAAS,MALpB,qBAKbpF,EALa,KAKP2F,EALO,KA+EpB,OAxEA,IAAAC,YAAU,WAAO,IAAD,EACY3D,UAAMA,MAAzB5D,EADO,EACPA,UACDyC,EAFQ,EACIvD,KACWc,UAAUwH,MAAK,SAAClH,GAAD,OAAOA,EAAEJ,UAAYA,KAC3DuH,EAAczH,EAAUwH,MAAK,SAAClH,GAAD,OAAOA,EAAEJ,UAAYA,KACxD,GAAKuH,EAEE,CACLH,EAAeG,GADV,IAEEpG,EAAgCoG,EAAhCpG,UAAWgD,EAAqBoD,EAArBpD,UAAWF,EAAUsD,EAAVtD,OAa7B8C,EAZqB,CACnBvF,OAAQ,CAAC,QAAS,YAAa,UAC/BG,SAAU,CACR,CACEC,MAAO5B,EACP6B,gBAAiB,qBACjBC,YAAa,gBACbC,YAAa,EACbN,KAAM,CAACN,EAAWgD,EAAWF,YAZnCmD,EAAe,GAkBjB,GAAK7E,EAEE,CACL,IAAME,EAAOF,EAAgBJ,UAAU,GAAGO,MAAM3C,KAAI,SAACK,EAAGoC,GACtD,IAAIF,EAAQ,EACNtD,EAAO2D,OAAOC,KAAKxC,GAAG,GAI5B,OAHAmC,EAAgBJ,UAAUC,SAAQ,SAACS,GACjCP,GAASO,EAASH,MAAMF,GAAOxD,MAE1B,CAAC8D,EAAG9D,EAAM+D,EAAGT,MAEhBd,EAASiB,EAAK1C,KAAI,SAACK,GACvB,IAAMrB,EAAI,IAAIiE,KAAK5C,EAAE0C,EAAEG,QAAQ,KAAM,MAC/BC,EAAMnE,EAAEoE,UACRC,EAAQrE,EAAEsE,WAAa,EAE7B,MAAM,GAAN,QAAU,IAAAC,QAAOJ,GAAjB,aAAyB,IAAAI,QAAOF,OAE5BpB,EAAgB,CACpBR,SACAG,SAAU,CACR,CACEC,MAAO,kBACPC,gBAAiB,qBACjBE,YAAa,EACbN,KAAMgB,EAAK1C,KAAI,SAACK,GAAD,OAAOA,EAAE2C,QAI9BoE,EAAYnF,GACZ,IAAMwF,EAAQ/E,EAAK1C,KACjB,SAACK,EAAGoC,GAAJ,OACEiF,SAASrH,EAAE2C,GAAK0E,SAAUhF,EAAKD,EAAQ,IAAMC,EAAKD,EAAQ,GAAGO,GAAM,MAEjE2E,EAAsB,CAC1BlG,OAAQA,EAAOD,MAAM,GACrBI,SAAU,CACR,CACEC,MAAO,cACPC,gBAAiB,UACjBE,YAAa,EACbN,KAAM+F,EAAMjG,MAAM,MAIxB0F,EAAmBS,QA5CnBP,EAAY,KA8Cb,CAACnH,IAES,OAATyB,EAEA,wBAAC,EAAAkE,kBAAD,CACEC,KAAK,QACLjB,MAAO,CACLkB,UAAW,GACXC,UAAW,YAOjB,wBAAC,EAAApB,KAAD,CAAMC,MAAOH,EAAOC,WACR,IAAThD,EACC,wBAAC,EAAAmD,KAAD,CAAMD,MAAO,CAACH,EAAOQ,MAAOR,EAAO+B,OAAnC,0BAC0BvG,EAD1B,cAIA,gDACE,wBAAC,EAAA2H,IAAD,CACEhD,MAAO,CACL8B,kBAAmB,OACnBC,kBAAmB,QACnBC,kBAAmB,IAErB,wBAAC,EAAA/B,KAAD,CAAMD,MAAO,CAACH,EAAOQ,MAAOR,EAAO+B,OAAQvG,GAC3C,wBAAC,EAAA4E,KAAD,CAAMgD,IAAG,uBAAkBnG,EAAKN,WAAawD,MAAOH,EAAO+B,MACzD,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,kBACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiBtC,EAAKN,cAE9B,wBAAC,EAAAyD,KAAD,CAAMgD,IAAG,wBAAmBnG,EAAKwC,QAAUU,MAAOH,EAAO+B,MACvD,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,mBACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiBtC,EAAKwC,WAE9B,wBAAC,EAAAW,KAAD,CACEgD,IAAG,2BAAsBnG,EAAK0C,WAC9BQ,MAAOH,EAAO+B,MACd,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,sBACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiBtC,EAAK0C,gBAE3B1C,EAAKR,YACN,wBAAC,EAAA2D,KAAD,CAAMgD,IAAG,sBAAiBnG,EAAKR,YAAc0D,MAAOH,EAAO+B,MACzD,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,iBACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiBtC,EAAKR,iBAG7BQ,EAAKJ,YACN,wBAAC,EAAAuD,KAAD,CAAMgD,IAAG,sBAAiBnG,EAAKJ,YAAcsD,MAAOH,EAAO+B,MACzD,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,0BACL,wBAAC,EAAAC,EAAD,CAAGD,EAAGrG,EAAKJ,WAAa,OAG5B,wBAAC,EAAAuD,KAAD,CACEgD,IAAG,sBAAiBlE,UAAMA,MAAME,YAAYoE,gBAC5CrD,MAAOH,EAAO+B,MACd,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,iBACL,wBAAC,EAAAC,EAAD,CAAGD,EAAGpE,UAAMA,MAAME,YAAYoE,qBAG/Bd,GACD,wBAAC,EAAAxC,KAAD,CAAMC,MAAO,CAACQ,MAAO,MAAOqB,aAAc,KACxC,wBAAC,EAAAyB,UAAD,CAAWxG,KAAMyF,EAAUlC,OAAK,IAC/BgC,GAAmB,wBAAC,EAAAiB,UAAD,CAAWxG,KAAMuF,EAAiBhC,OAAK,IAC3D,wBAAC,EAAAkD,SAAD,CACEzG,KAAMqF,EACNtD,OAAQ,CAAC,UAAW,UAAW,c,uHC/J/C,cACA,QAOA,SACA,WACA,WACA,YAEM2E,EAAe,WAAkB,IAAjBC,EAAgB,uDAAP,GAE7B,GADA1E,UAAMC,SAAS,CAACyE,WACZA,EAAO3H,OAAQ,CACjB,IAAM2D,EAAoBV,UAAMA,MAAM5D,UAAUK,QAAO,SAACC,GAAD,OACrDA,EAAEJ,QAAQQ,cAAc6H,SAASD,EAAO5H,kBAE1CkD,UAAMC,SAAS,CAACS,2BAEhBV,UAAMC,SAAS,CAACS,kBAAmBV,UAAMA,MAAM5D,aA2K7C0E,EAASwB,aAAWC,OAAO,CAC/BxB,UAAW,CACTyB,WAAY,SACZC,UAAW,OACXhB,MAAO,QAETH,MAAO,CACLC,MAAO,OACPmB,WAAY,OACZC,SAAU,IAEZE,KAAM,CACJtB,MAAO,OACPuB,aAAc,GAEhBxG,QAAS,CACPkG,WAAY,aACZoC,eAAgB,aAChBnD,MAAO,OACPqB,aAAc,GACdC,kBAAmB,OACnBC,kBAAmB,QACnBC,kBAAmB,EACnB9E,gBAAiB,WACjB0G,aAAc,EACdrD,QAAS,GAETsD,YAAa,OACbC,aAAc,CAACtD,MAAO,EAAGuD,OAAQ,GACjCC,cAAe,GACfC,aAAc,EACdC,UAAW,K,EAvMF,WAAO,IAAD,EAUbnF,UAAMA,MARRE,EAFe,EAEfA,YACA5B,EAHe,EAGfA,cACA8B,EAJe,EAIfA,SACAE,EALe,EAKfA,UACAE,EANe,EAMfA,aACAE,EAPe,EAOfA,kBACAgE,EARe,EAQfA,OACA1G,EATe,EASfA,UAGF,OACE,wBAAC,EAAAgD,KAAD,CAAMC,MAAOH,EAAOC,WAChBb,EASA,gDACE,wBAAC,EAAA+D,IAAD,CACEhD,MAAO,CACL8B,kBAAmB,OACnBC,kBAAmB,QACnBC,kBAAmB,IAErB,wBAAC,EAAA/B,KAAD,CAAMD,MAAO,CAACH,EAAOQ,MAAOR,EAAO+B,OAAnC,aACA,wBAAC,EAAA3B,KAAD,CAAMgD,IAAG,uBAAkB9D,GAAYa,MAAOH,EAAO+B,MACnD,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,kBACL,wBAAC,EAAAC,EAAD,CAAGD,EAAGhE,KAER,wBAAC,EAAAc,KAAD,CAAMgD,IAAG,wBAAmB5D,GAAaW,MAAOH,EAAO+B,MACrD,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,mBACL,wBAAC,EAAAC,EAAD,CAAGD,EAAG9D,KAER,wBAAC,EAAAY,KAAD,CAAMgD,IAAG,2BAAsB1D,GAAgBS,MAAOH,EAAO+B,MAC3D,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,sBACL,wBAAC,EAAAC,EAAD,CAAGD,EAAG5D,KAER,wBAAC,EAAAU,KAAD,CACEgD,IAAG,sBAAiBhE,EAAYoE,gBAChCrD,MAAOH,EAAO+B,MACd,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,iBACL,wBAAC,EAAAC,EAAD,CAAGD,EAAGlE,EAAYoE,mBAGtB,wBAAC,EAAAtD,KAAD,CACEC,MAAO,CACLQ,MAAO,MACPqB,aAAc,GACdsC,cAAe,SACfR,eAAgB,SAChBpC,WAAY,WAEd,wBAAC,UAAD,CAAOzE,KAAMC,IACb,wBAAC,EAAAuG,UAAD,CAAWxG,KAAMO,EAAe+G,QAAM,KAGxC,wBAAC,UAAD,MACA,wBAAC,EAAAC,UAAD,CACErE,MAAO,CACL+D,OAAQ,GACR5G,YAAa,OACbC,YAAa,EACbF,gBAAiB,OACjBsD,MAAO,MACPoD,aAAc,EACdU,YAAa,EACbC,aAAc,GAEhBC,YAAY,4BACZC,aAAcjB,EACdpH,MAAOqH,GAAU,KAEnB,wBAAC,EAAAT,IAAD,KACGvD,EAAkB3D,OAAS,EAC1B,wBAAC,EAAAmE,KAAD,CAAMD,MAAO,CAACH,EAAOQ,MAAOR,EAAO+B,OAAnC,sDAIAnC,EAAkBrE,KAChB,WASEyC,GACI,IARFxC,EAQC,EARDA,QACAmB,EAOC,EAPDA,UACA8C,EAMC,EANDA,OACAE,EAKC,EALDA,UACAlD,EAIC,EAJDA,WACAI,EAGC,EAHDA,WAUF,OACE,wBAAC,EAAA+D,KAAD,CAAMC,GAAE,kBAAarF,GAAW4H,IAAKpF,GACnC,wBAAC,EAAAkC,KAAD,CAAMC,MAAOH,EAAOxE,SAClB,wBAAC,EAAA0E,KAAD,KACE,wBAAC,EAAAE,KAAD,CAAMD,MAAO,CAACH,EAAOQ,MAAOR,EAAO+B,OAChCvG,GAEH,wBAAC,EAAA4E,KAAD,CAAMD,MAAOH,EAAO+B,MAClB,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,WAAY,IACjB,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiB5C,MAEzB,wBAAC,EAAAyD,KAAD,CAAMD,MAAOH,EAAO+B,MAClB,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,aACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiBE,MAEzB,wBAAC,EAAAW,KAAD,CAAMD,MAAOH,EAAO+B,MAClB,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,gBACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiBI,QAGtBlD,GACD,wBAAC,EAAA2D,KAAD,CAAMD,MAAOH,EAAO+B,MAClB,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,iBACL,wBAAC,EAAAC,EAAD,CAAGD,GAAG,IAAA/D,kBAAiB9C,QAGxBI,GACD,wBAAC,EAAAuD,KAAD,CAAMD,MAAOH,EAAO+B,MAClB,wBAAC,EAAAsB,EAAD,CAAGC,EAAE,0BACL,wBAAC,EAAAC,EAAD,CAAGD,EAAGzG,EAAa,QAIzB,wBAAC,EAAAuD,KAAD,CACED,MAAO,CACL,CACEmB,UAAW,WACXb,MAAO,OACPC,QAAS,GACTC,MAAO,OACPtD,gBAAiB,UACjByD,WAAY,GACZiD,aAAc,EACdc,UAAW,SACXb,YAAa,OACbC,aAAc,CAACtD,MAAO,EAAGuD,OAAQ,GACjCC,cAAe,GACfC,aAAc,EACdC,UAAW,KAfjB,4BAxHhB,wBAAC,EAAAlD,kBAAD,CACEC,KAAK,QACLjB,MAAO,CACLkB,UAAW,GACXC,UAAW,c,8MC3CvB,UACA,QACA,SACA,OACA,SACA,WACA,QAoCA,IAGMwD,EAAM,U,yPAIF,CACNC,IAAK,mBACLC,IAAK,UACLC,KAAM,K,uCAECC,UAAMC,c,4CACF,WACX,IAAMF,EAAO,EAAKG,QAAU,EAAKA,OAAOC,QAAQC,eAAeC,UAC3DN,GACF,EAAK9F,SAAS,CAAC8F,Y,2EAGT,IAAD,OAKP,OAJAxK,QAAQC,IACN,4DACA8K,KAAKtG,MAAM+F,MAGX,wBAAC,EAAA/E,KAAD,CACEC,MAAO,CACLQ,MAAO,MACP8E,SAAU,WACVzD,aAAc,GACdX,UAAW,KAEb,wBAAC,EAAAqE,IAAD,CACEC,QAAS,EACTC,IAAKJ,KAAKJ,OACVS,UAAWL,KAAKM,WAChBC,OAAQ,CAACP,KAAKtG,MAAM6F,IAAKS,KAAKtG,MAAM8F,KACpCC,KAAMO,KAAKtG,MAAM+F,KACjB9E,MAAO,CAACQ,MAAO,OAAQ8E,SAAU,WAAYvB,OAAQ,MACrD,wBAAC,EAAA8B,UAAD,CACEC,YAAY,gJACZC,IAAI,oEAEHhH,UAAMA,MAAM5D,WACb4D,UAAMA,MAAM5D,UAAUC,KAAI,SAAC0B,GAAU,IAS/BkJ,EAPF3K,EAMEyB,EANFzB,QACAmB,EAKEM,EALFN,UACA8C,EAIExC,EAJFwC,OACAE,EAGE1C,EAHF0C,UACAlD,EAEEQ,EAFFR,WACAkB,EACEV,EADFU,UAGEA,EAAU1B,OAAS,GACrBkK,EAAQxI,EAAUmF,MAAK,SAAClH,GAAD,MAAmB,KAAZA,EAAEsD,YAE9BiH,EA3FlB,SAA4BC,GAC1B,GAAsB,IAAlBA,EAAOnK,OACT,OAAOmK,EAAO,GAGhB,IAAI7H,EAAI,EACJD,EAAI,EACJ+H,EAAI,EAP0B,uBASlC,YAAkBD,EAAlB,uFAA0B,CAAC,IAAlBE,EAAiB,QACpBvB,EAAOuB,EAAMvB,IAAMwB,KAAKC,GAAM,IAC9BC,EAAOH,EAAMG,IAAMF,KAAKC,GAAM,IAElCjI,GAAKgI,KAAKG,IAAI3B,GAAOwB,KAAKG,IAAID,GAC9BnI,GAAKiI,KAAKG,IAAI3B,GAAOwB,KAAKI,IAAIF,GAC9BJ,GAAKE,KAAKI,IAAI5B,IAfkB,kFAkBlC,IAAIjH,EAAQsI,EAAOnK,OAEnBsC,GAAQT,EACRQ,GAAQR,EACRuI,GAAQvI,EAER,IAAI8I,EAAaL,KAAKM,MAAMvI,EAAGC,GAC3BuI,EAAoBP,KAAKQ,KAAKxI,EAAIA,EAAID,EAAIA,GAG9C,MAAO,CACLyG,IAAmB,IAHJwB,KAAKM,MAAMR,EAAGS,GAGHP,KAAKC,GAC/BC,IAAmB,IAAbG,EAAoBL,KAAKC,IA6DTQ,CAAmBrJ,IAG7BwI,EAAQxI,EAAU,GAEpB,IAAMsJ,EAAQ,CAACd,EAAMpB,IAAKoB,EAAMM,KAE5BS,GACDvK,EAAY,IAAM,EAAI,IACJ,EAAlB,EAAKuC,MAAM+F,OACZrI,QAAQ,GAEVsK,EAAiBA,EAAiB,GAAKA,EAAiB,GACxD,IAAIC,GAAmBxH,EAAYhD,EAAa,KAAKC,QAAQ,GACzDwK,GAAgB3H,EAAS9C,EAAa,KAAKC,QAAQ,GAGrDsK,EADE,EAAKhI,MAAM+F,KAAO,EAElBiC,EA3EH,KA2E6BA,EA3E7B,KA8EGA,EA7EH,KA6E6BA,EA7E7B,KAiFD,IAAMG,EAAc,CAClBhK,gBAAiByH,EACjBrE,MAAOqE,EACPnE,MAAM,GAAD,OAAKuG,EAAL,KACLhD,OAAO,GAAD,OAAKgD,EAAL,KACNnD,aAAc,IACdc,UAAW,SACXyC,WAAW,IAAD,OAAMJ,EAAiB,EAAvB,KACV7F,UAAU,IAAD,OAAM6F,EAAiB,EAAvB,KACTK,QAAS,OACT7F,WAAY,SACZoC,eAAgB,SAChB2B,SAAU,YAEN+B,EAAkB,CACtBC,OAAQ,IACRpK,gBA9FF,UA+FEoD,MA/FF,UAgGEE,MAAM,GAAD,OAAKwG,EAAL,KACLjD,OAAO,GAAD,OAAKiD,EAAL,KACNpD,aAAc,IACdwD,QAAS,OACT7F,WAAY,SACZoC,eAAgB,SAChB4D,OAAQ,UAEJC,EAAc,CAClBF,OAAQ,IACRhC,SAAU,WACVpI,gBA1GH,UA2GGoD,MA3GH,UA4GG8G,QAAS,OACT5G,MAAM,GAAD,OAAKyG,EAAL,KACLlD,OAAO,GAAD,OAAKkD,EAAL,KACNrD,aAAc,IACd2D,OAAQ,UAEJE,GAAa,IAAAC,sBACjB,+BAAK1H,MAAOkH,GACV,+BAAKlH,MAAOqH,IACZ,+BAAKrH,MAAOwH,MAGVG,GAAmB,IAAAC,SAAQ,CAC/BC,KAAMJ,IAER,OACE,wBAAC,EAAAK,OAAD,CAAQxC,SAAUwB,EAAO7D,IAAK5H,EAAS0M,KAAMJ,GAC3C,wBAAC,EAAAK,MAAD,KACE,oCACE,iCAAI3M,IAEN,mCACA,oCACE,gCACE2E,MAAO,CACL9C,gBAAiByH,EACjBzD,WAAY,EACZV,MAAO,EACPuD,OAAQ,EACRH,aAAc,IACdwD,QAAS,iBAEV,KACK,IAXV,WAYU,IAAAhI,kBAAiB5C,IAE3B,mCACA,oCACE,gCACEwD,MAAO,CACL9C,gBArJZ,UAsJYgE,WAAY,EACZV,MAAO,EACPuD,OAAQ,EACRH,aAAc,IACdwD,QAAS,iBAEV,KAVL,eAYc,IAAAhI,kBAAiBI,IAE/B,mCACA,oCACE,gCACEQ,MAAO,CACL9C,gBAnKb,UAoKagE,WAAY,EACZV,MAAO,EACPuD,OAAQ,EACRH,aAAc,IACdwD,QAAS,iBAEV,KAVL,YAYW,IAAAhI,kBAAiBE,IAE5B,mCACChD,GACC,oDAAmB,IAAA8C,kBAAiB9C,e,GA/KvC8E,a,wKChDb6G,EAASvO,EAAQ,KACjBwO,EAAUxO,EAAQ,KAClByO,EAAMzO,EAAQ,KAEPU,EAAI,G,UAoBXgO,E,oJACUlJ,G,gFACRpC,EAAO,QACCuL,GAARnJ,E,uBACFA,EAAO+I,EAAO/I,EAAM,cAAcP,OAAO,c,SAC5B0G,KAAKiD,UAAUpJ,G,OAA5BpC,E,qCAEAoC,EAAO+I,IAAStJ,OAAO,c,UACV0G,KAAKiD,UAAUpJ,G,QAA5BpC,E,wCAEKA,G,iMAGeyL,G,kFAClBzL,EAAO,GACPoC,EAAO+I,IAAStJ,OAAO,cAC3B4J,EAAOA,EAAK1M,qBAECwM,KADbvL,EAAO1C,EAAEmO,KACkBzL,GAAQA,EAAKmC,cAAgBC,G,gCAChDmG,KAAKmD,qBAAqBD,G,OAChCzL,EAAO1C,EAAEmO,G,gCAEJzL,G,wLAGOoC,G,6EACVpC,EAAO,GAEXA,EAAO1C,EAAE8E,G,iBAEEmJ,IAATvL,GACAmL,EAAO/I,EAAM,eAAiB+I,EAAO,aAAc,e,iCAG7C5C,KAAKoD,sBAAsBvJ,G,eAErBmJ,IADZvL,EAAO1C,EAAE8E,I,oBAGPA,EAAO+I,EAAO/I,EAAM,cACjBwJ,SAAS,EAAG,QACZ/J,OAAO,mBAEG0J,KADbvL,EAAO1C,EAAE8E,I,kCAGDmG,KAAKoD,sBAAsBvJ,G,QACjCpC,EAAO1C,EAAE8E,G,2CAIFmJ,IAATvL,IACFA,EAAO,CAAC6L,MAAO,qC,kBAEV7L,G,qMAGmBoC,G,2FACtB1B,EAAY,G,SACV2K,IACHS,WACCV,EAAQW,IAAR,0HACqH3J,EADrH,UAIDyC,UANG,+CAMO,WAAOxH,GAAP,gGACF,IAAIP,SAAQ,SAACkP,EAASC,GAC3B,IAAIC,EAAM,GAIRA,EAFAf,EAAO/I,EAAM,eAAiB+I,EAAO,aAAc,cAE7C,CACJ5M,QAASlB,EAAK,mBAAqB,GACnC4E,MAAO5E,EAAK,mBAAqB,GACjCyK,IAAKzK,EAAI,UAAgB,MACzBmM,IAAKnM,EAAI,WAAiB,MAC1B8O,WAAY9O,EAAK,gBAAkB,GACnCqC,UAAWsG,SAAS3I,EAAI,YAAkB,EAC1CmF,OAAQwD,SAAS3I,EAAI,SAAe,EACpCqF,UAAWsD,SAAS3I,EAAI,YAAkB,GAItC,CACJkB,QAASlB,EAAI,gBAAsB,GACnC4E,MAAO5E,EAAI,gBAAsB,GACjCyK,IAAKzK,EAAI,KAAW,MACpBmM,IAAKnM,EAAI,OAAa,MACtB8O,WAAY9O,EAAI,aAAmB,GACnCqC,UAAWsG,SAAS3I,EAAI,YAAkB,EAC1CmF,OAAQwD,SAAS3I,EAAI,SAAe,EACpCqF,UAAWsD,SAAS3I,EAAI,YAAkB,GAG9CqD,EAAUoB,KAAKoK,GACfF,QA9BO,2CANP,uDAuCH7O,KAvCG,+CAuCE,WAAOE,GAAP,kFACAqD,EAAU1B,OAAS,GADnB,gCAEoB,EAAKoN,QAAQ,UAAW1L,EAAW0B,GAFvD,OAEE/D,EAFF,cAGKf,EAAE8E,GACT9E,EAAE8E,GAAQ/D,EAJR,2CAvCF,uD,iLAgDM8H,EAAKkG,EAAOjK,G,mGAGpBkK,EAAiB,EACjBC,EAAiB,EACjBC,EAAc,EAEdC,EAAe,EACfhK,EAAe,EACfF,EAAY,GARZlF,EAAO,IAUNgB,UATDqO,EAAS,GAWJ/N,EAAI,E,aAAGA,EAAI0N,EAAMrN,Q,iBACpB2N,GAAQ,EACZL,EAAiB,EACjBC,EAAiB,EACjBC,EAAc,EAEdC,GAAgBzG,SAASqG,EAAM1N,GAAGe,WAClC+C,GAAgBuD,SAASqG,EAAM1N,GAAG+D,WAClCH,GAAayD,SAASqG,EAAM1N,GAAG6D,QAGtBpF,EAAI,E,aAAGA,EAAIsP,EAAO1N,Q,oBACrB0N,EAAOtP,GAAG+I,IAAQkG,EAAM1N,GAAGwH,G,wBAC7BmG,GAAkBtG,SAASqG,EAAM1N,GAAGe,WACpCgN,EAAOtP,GAAGsC,UAAY4M,EAAiBtG,SAAS0G,EAAOtP,GAAGsC,WAE1D6M,GAAkBvG,SAASqG,EAAM1N,GAAG+D,WACpCgK,EAAOtP,GAAGsF,UAAY6J,EAAiBvG,SAAS0G,EAAOtP,GAAGsF,WAE1D8J,GAAexG,SAASqG,EAAM1N,GAAG6D,QACjCkK,EAAOtP,GAAGoF,OAASgK,EAAcxG,SAAS0G,EAAOtP,GAAGoF,QAEpDkK,EAAOtP,GAAGsD,UAAUoB,KAAKuK,EAAM1N,IAC/BgO,GAAQ,E,6BAZuBvP,I,wBAiB9BuP,IACHL,EAAiB,EACjBC,EAAiB,EACjBC,EAAc,EACVI,EAAQ,CAAClM,UAAW,IAExB4L,GAAkBtG,SAASqG,EAAM1N,GAAGe,WACpCkN,EAAK,UAAgBN,EAErBC,GAAkBvG,SAASqG,EAAM1N,GAAG+D,WACpCkK,EAAK,UAAgBL,EAErBC,GAAexG,SAASqG,EAAM1N,GAAG6D,QACjCoK,EAAK,OAAaJ,EAElBI,EAAMzG,GAAOkG,EAAM1N,GAAGwH,GACtByG,EAAK,IAAUP,EAAM1N,GAAN,IACfiO,EAAK,IAAUP,EAAM1N,GAAN,IAEfiO,EAAMlM,UAAUoB,KAAKuK,EAAM1N,IAC3B+N,EAAO5K,KAAK8K,I,QAhDkBjO,I,+BAoDlCtB,EAAK+E,KAAOA,EACZ/E,EAAKqC,UAAY+M,EACjBpP,EAAKqF,UAAYD,EACjBpF,EAAKmF,OAASD,E,kBAEPlF,G,mMAGkBoO,G,+FACrBpN,EAAY,GACZwO,EAAM1B,EAAO,cACb2B,EAAM3B,I,SAEJE,IACHS,WACCV,EAAQW,IAAR,4IACuIN,EADvI,iBAID5G,UANG,+CAMO,WAAOxH,GAAP,gGACF,IAAIP,SAAQ,SAACkP,EAASC,GAQ3B,IAPA,IAAI7K,EAAW,CACb7C,QAASlB,EAAK,mBAAqB,GACnC4E,MAAO5E,EAAK,mBAAqB,GACjCyK,IAAKzK,EAAI,KAAW,MACpBmM,IAAKnM,EAAI,MAAY,OAEnB4D,EAAQ,GAEN8L,EAAI5B,EAAO0B,GACfE,EAAEC,KAAKF,EAAK,SAAW,EACvBC,EAAEE,IAAI,EAAG,QACT,CACA,IAAI7K,EAAO2K,EAAElL,OAAO,UACpB,QAAkB0J,GAAdlO,EAAK+E,GAAoB,CAC3B,IAAI9C,EAAQ0G,SAAS3I,EAAK+E,KAAU,EAChC8K,GAAO,gBACRH,EAAElL,OAAO,cAAgBvC,GAE5B2B,EAAMa,KAAKoL,IAIf,GAAIjM,EAAMjC,OAAS,EAAG,CACpB,IAAImO,EAAWlM,EAAMA,EAAMjC,OAAS,GACpCoC,EAASP,MAAQK,OAAOkM,OAAOD,GAAU,GAG3C/L,EAASH,MAAQA,EACjB5C,EAAUyD,KAAKV,GACf4K,QA/BO,2CANP,uDAwCH7O,KAxCG,+CAwCE,WAAOE,GAAP,4EACAgB,EAAUW,OAAS,GADnB,gCAEgB,EAAKqO,mBAAmB,UAAWhP,GAFnD,OAEFA,EAFE,cAIKf,EAAEmO,GACTnO,EAAEmO,GAAQpN,EALR,2CAxCF,uD,4LAkDiB8H,EAAKkG,G,2FAGxBiB,EAAa,GAFbC,EAAO,IAINlP,UAHDqC,EAAY,GAKP/B,EAAI,E,YAAGA,EAAI0N,EAAMrN,Q,iBACpB6B,EAAQ,EACR8L,GAAQ,EAEHvP,EAAI,E,YAAGA,EAAIsD,EAAU1B,Q,oBACxB0B,EAAUtD,GAAG+I,IAAQkG,EAAM1N,GAAGwH,G,wBAChCtF,GAASmF,SAASqG,EAAM1N,GAAGkC,QAAU,EACrCH,EAAUtD,GAAGsD,UAAUoB,KAAKuK,EAAM1N,IAClCgO,GAAQ,E,6BAJ0BvP,I,uBASjCuP,KACCC,EAAQ,CAAClM,UAAW,KAClByF,GAAOkG,EAAM1N,GAAGwH,GACtByG,EAAK,IAAUP,EAAM1N,GAAN,IACfiO,EAAK,IAAUP,EAAM1N,GAAN,IACfkC,GAASmF,SAASqG,EAAM1N,GAAN,QAAsB,EACxCiO,EAAMlM,UAAUoB,KAAKuK,EAAM1N,IAC3B+B,EAAUoB,KAAK8K,IAGjBlM,EAAUtD,GAAGyD,MAAQA,EACrByM,GAAczM,E,QAxBkBlC,I,8BA2BlC4O,EAAKpL,YAAcgJ,IAAStJ,OAAO,cACnC0L,EAAK1M,MAAQyM,E,kBACNC,G,4GAIXC,EAAOC,QAAUnC,G,4NCnRV,SAAkBoC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,UAAwBC,OAAO1M,SAASkC,MACpDyK,SAAWD,OAAO1M,SAAS2M,OAIvC,OAGFD,OAAOE,iBAAiB,QAAQ,WAC9B,IAAMC,EAAK,UAAMJ,UAAN,sBAEPK,IAgEV,SAAiCD,EAAOP,GAEtCxQ,MAAM+Q,EAAO,CACXE,QAAS,CAAE,iBAAkB,YAE5BhR,MAAK,SAAAiR,GAEJ,IAAMC,EAAcD,EAASD,QAAQpC,IAAI,gBAEnB,MAApBqC,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CZ,UAAUlR,cAAc+R,MAAMrR,MAAK,SAAAsR,GACjCA,EAAaC,aAAavR,MAAK,WAC7B2Q,OAAO1M,SAASuN,eAKpBC,EAAgBX,EAAOP,MAG1BmB,OAAM,WACLrR,QAAQC,IACN,oEAvFAqR,CAAwBb,EAAOP,GAI/BC,UAAUlR,cAAc+R,MAAMrR,MAAK,WACjCK,QAAQC,IACN,iHAMJmR,EAAgBX,EAAOP,Q,aAgFxB,WACD,kBAAmBC,WACrBA,UAAUlR,cAAc+R,MACrBrR,MAAK,SAAAsR,GACJA,EAAaC,gBAEdG,OAAM,SAAAhD,GACLrO,QAAQqO,MAAMA,EAAMkD,aA7H5B,IAAMb,EAAcc,QACW,cAA7BlB,OAAO1M,SAAS6N,UAEe,UAA7BnB,OAAO1M,SAAS6N,UAEhBnB,OAAO1M,SAAS6N,SAASC,MACvB,2DAsCN,SAASN,EAAgBX,EAAOP,GAC9BC,UAAUlR,cACPC,SAASuR,GACT9Q,MAAK,SAAAsR,GACJA,EAAaU,cAAgB,WAC3B,IAAMC,EAAmBX,EAAaY,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnN,QACf0L,UAAUlR,cAAc8S,YAI1B/R,QAAQC,IACN,iHAKEiQ,GAAUA,EAAO8B,UACnB9B,EAAO8B,SAASf,KAMlBjR,QAAQC,IAAI,sCAGRiQ,GAAUA,EAAO+B,WACnB/B,EAAO+B,UAAUhB,WAO5BI,OAAM,SAAAhD,GACLrO,QAAQqO,MAAM,4CAA6CA,Q,uMChGjE,UACA,QACA,S,olBAEsB,SAAClN,GAAD,OAAQA,EAAI,GAAJ,WAAaA,GAAMA,GAC1C,IAAMoD,EAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,WAEF,IAAM2N,EAAoB,CACxBjE,KAAM,cACNkE,MAAO,CACL9C,IAAK,GACLC,IAAK,IACL8C,SAAU,SAAUtQ,EAAOyB,EAAOqM,GAChC,OAAOyC,OAAOvQ,EAAMwQ,cAGxBC,gBAAiB,SAAUC,GAEzBA,EAASL,MAAQ,GACjBK,EAASL,MAAM7N,KAAK,IACpBkO,EAASL,MAAM7N,KAAK,GACpBkO,EAASL,MAAM7N,KAAK,IACpBkO,EAASL,MAAM7N,KAAK,KACpBkO,EAASL,MAAM7N,KAAK,O,MAIL,SAAC,GAAD,IAAEmO,EAAF,EAAEA,SAAU/M,EAAZ,EAAYA,MAAZ,OACjB,wBAAC,EAAAD,KAAD,CACEC,MAAO,CACL,CACEuH,OAAQ,GACRhH,QAAS,GACTC,MAAO,OAETR,IAED+M,I,IAIY,SAAC,GAAD,IAAE5J,EAAF,EAAEA,EAAF,OACf,wBAAC,EAAAlD,KAAD,CACED,MAAO,CACLM,MAAO,SAER6C,IAYE,SAAS/D,EAAiBhB,EAAG4O,GAClC,IAAMC,EAAI7O,EAAEwO,WAAWtO,QAAQ,wBAAyB,KACxD,GAAI0O,GAAe5O,EAAI,IAAK,CAC1B,IAAI8O,EAAU,GAKd,OAJI9O,EAAI,KAAQ6O,EAAEnR,OAAS,GAAqB,QAAhBmR,EAAErQ,OAAO,KACvCsQ,EAAO,WAAOD,EAAErQ,OAAO,GAAG,KAGtB,GAAN,OAAUqQ,EAAErQ,MAAM,EAAGqQ,EAAEnR,OAAS,IAAhC,OAAqCoR,EAArC,KAEF,OAAOD,E,IAnBQ,SAAC,GAAD,IAAE9J,EAAF,EAAEA,EAAF,OACf,wBAAC,EAAAlD,KAAD,CACED,MAAO,CACLM,MAAO,SAER6C,I,YAiBoB,SAAC,GAAwC,IAAvCrG,EAAsC,EAAtCA,KAAMsH,EAAgC,EAAhCA,OAAQ/D,EAAwB,EAAxBA,MAAO8M,EAAiB,EAAjBA,YACxCC,EAAU,CACd/M,MAAO,CACL+G,QAAS+F,KAAiB9M,EAC1BuB,KAAMuL,EAAc,oBAAsBrQ,EAAKE,SAAS,GAAGC,MAC3DyE,SAAU,IAEZ2L,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEf,MAAO,CACLgB,aAAa,EACbf,SAAU,SAAUtQ,EAAOyB,EAAOqM,GAChC,OAAO9K,EAAiBhD,GAAO,QAMzCgI,OAAQ,CACNgD,UAAWhD,EACXkB,SAAU,SACVzI,OAAQ,CACN6Q,UAAW,QACXC,SAAU,GACVpN,QAAS,MAIf,OACE,wBAAC,EAAAR,KAAD,CACEC,MAAO,CAACkB,UAAW,GAAI6C,OAAQ,IAAKvD,MAAO,OAAQ8E,SAAU,aAC7D,wBAAC,EAAAsI,KAAD,CACE9Q,KAAMA,EACNsQ,QAASD,EAAW,KAAOX,EAAP,GAA6BY,GAAWA,MAK7D,IAAM7J,EAAW,SAAC,GAAuB,IAAtBzG,EAAqB,EAArBA,KAAc+Q,EAAO,EAAfhP,OAG9B,OAFA/B,EAAKE,SAAS,GAAGE,gBAAkB2Q,GAAKhP,EACxC/B,EAAKE,SAAS,GAAG8Q,qBAAuBD,GAAKhP,EAE3C,wBAAC,EAAAkB,KAAD,CACEC,MAAO,CACLkB,UAAW,GACX6C,OAAQ,OACRvD,MAAO,OACP8E,SAAU,aAEZ,wBAAC,EAAAyI,IAAD,CACEjR,KAAMA,EACNsQ,QAAS,CACPC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEf,MAAO,CACLC,SAAU,SAAUtQ,EAAOyB,EAAOqM,GAChC,OAAO9K,EAAiBhD,GAAO,QAMzCiE,MAAO,CACL+G,SAAS,EAET1F,SAAU,IAEZ0C,OAAQ,CACNgD,SAAS,EACT9B,SAAU,c,wBAQE,SAAC,GAAY,IAAXxI,EAAU,EAAVA,KAGxB,OAFAA,EAAKE,SAAS,GAAGE,gBAAkB2B,EACnC/B,EAAKE,SAAS,GAAG8Q,qBAAuBjP,EAEtC,wBAAC,EAAAkB,KAAD,CAAMC,MAAO,CAACQ,MAAO,SACnB,wBAAC,EAAAwN,IAAD,CACElR,KAAMA,EACNsQ,QAAS,CACP/M,MAAO,CACL+G,SAAS,EACTxF,KAAM9E,EAAKE,SAAS,GAAGC,MACvByE,SAAU,IAEZ0C,OAAQ,CACNgD,SAAS,QA0BrB,I,EAAc,SAAC6G,GACb,OACE,gDACE,wBAAC1K,EAAa0K,K,kGCvNpB,I,EAEc,IAFd,OAEkBC,OAAM,QAAS,CAC/BjP,YAAa,KACbwE,OAAQ,K","file":"static/js/main.4664547c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {Component} from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  ScrollView,\n} from 'react-native';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from 'react-router-dom';\nimport {subscribe} from 'jstates-react';\nimport Country from './Country';\nimport Home from './Home';\nimport {colors, format, numberWithCommas} from './Chart';\nimport state from './state';\n\nconst Covid19 = require('./jsu');\nconst covid19 = new Covid19();\n\nclass App extends Component {\n  async componentDidMount() {\n    const [d, time, j] = await Promise.all([\n      covid19.getData(),\n      covid19.getTimeSeriesData('confirmed'),\n      fetch(\n        'https://data.opendatasoft.com/api/records/1.0/search/?dataset=world-population%40kapsarc&rows=10000&sort=year&facet=year&facet=country_name',\n      ).then((j) => j.json()),\n    ]);\n    console.log('--¯_(ツ)_/¯-----------d----------', d);\n    console.log('--¯_(ツ)_/¯-----------time----------', time);\n    console.log('--¯_(ツ)_/¯-----------j----------', j);\n    const countryNamesExceptions = {\n      US: 'United States',\n      Iran: 'Iran, Islamic Rep.',\n      Russia: 'Russian Federation',\n      'Korea, South': 'Korea, Rep.',\n      Czechia: 'Czech Republic',\n      Egypt: 'Egypt, Arab Rep.',\n      Slovakia: 'Slovak Republic',\n      Kyrgyzstan: 'Kyrgyz Republic',\n      Venezuela: 'Venezuela, RB',\n      Brunei: 'Brunei Darussalam',\n      Gambia: 'Gambia, The',\n    };\n    const countries = d.countries.map((country) => {\n      const countryPopulations = j.records.filter((i) => {\n        const countryName = i.fields.country_name;\n        return (\n          countryName.toLowerCase() === country.country.toLowerCase() ||\n          countryName === countryNamesExceptions[country.country]\n        );\n      });\n\n      if (!countryPopulations.length) {\n        return country;\n      }\n      const countryPopulation = countryPopulations.sort(\n        (a, b) => b.fields.year - a.fields.year,\n      )[0];\n      if (!countryPopulation || !countryPopulation.fields.value) {\n        return country;\n      }\n      const newCountry = {\n        ...country,\n        population: countryPopulation.fields.value,\n      };\n      const perc = (\n        (country.confirmed / countryPopulation.fields.value) *\n        100\n      ).toFixed(2);\n      if (perc + '' !== '0.00') {\n        newCountry.precentage = perc;\n      }\n      return newCountry;\n    });\n\n    const top10 = countries\n      .sort((a, b) => b.confirmed - a.confirmed)\n      .slice(0, 6);\n\n    const labels = top10.map((i) => i.country);\n    const data = top10.map((i) => i.confirmed);\n    const chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Cases per country',\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data,\n        },\n      ],\n    };\n    const lineChartData = {\n      labels: [],\n      datasets: [],\n    };\n    const timeCountries = time.countries\n      .sort((a, b) => {\n        let aTotal = 0;\n        let bTotal = 0;\n        a.locations.forEach((l) => {\n          aTotal += l.total;\n        });\n        b.locations.forEach((l) => {\n          bTotal += l.total;\n        });\n\n        return bTotal - aTotal;\n      })\n      .slice(0, 10);\n\n    timeCountries.forEach((countryTimeData, index) => {\n      const sets = countryTimeData.locations[0].dates.map((i, index) => {\n        let total = 0;\n        const time = Object.keys(i)[0];\n        countryTimeData.locations.forEach((location) => {\n          total += location.dates[index][time];\n        });\n        return {y: time, x: total};\n      });\n      if (lineChartData.labels.length < 1) {\n        lineChartData.labels = sets.map((i) => {\n          const d = new Date(i.y.replace(/-/g, '/'));\n          const day = d.getDate();\n          const month = d.getMonth() + 1;\n\n          return `${format(day)}.${format(month)}`;\n        });\n      }\n      lineChartData.datasets.push({\n        label: countryTimeData.country,\n        borderColor: colors[index],\n        fill: false,\n        borderWidth: 1,\n        data: sets.map((i) => i.x),\n      });\n    });\n    state.setState({\n      lastUpdated: new Date(d.date.replace(/-/g, '/')),\n      allCases: numberWithCommas(d.confirmed),\n      allDeaths: numberWithCommas(d.deaths),\n      allRecovered: numberWithCommas(d.recovered),\n      countries,\n      filteredCountries: countries,\n      chartData,\n      time,\n      lineChartData,\n    });\n  }\n\n  render() {\n    const {lastUpdated} = state.state;\n\n    return (\n      <Router basename=\"/corona\">\n        <ScrollView contentContainerStyle={styles.container}>\n          <View style={styles.container}>\n            <Text\n              accessibilityRole=\"link\"\n              target=\"_blank\"\n              href=\"https://github.com/CSSEGISandData/COVID-19\"\n              style={[\n                styles.title,\n                {color: '#aaa', padding: 10, width: '100%'},\n              ]}>\n              COVID-19 data provided by Johns Hopkins CSSE\n            </Text>\n            {!lastUpdated ? (\n              <ActivityIndicator\n                size=\"large\"\n                style={{\n                  marginTop: 40,\n                  alignSelf: 'center',\n                }}\n              />\n            ) : (\n              <>\n                <Link to=\"/\">\n                  <Text\n                    style={[\n                      styles.title,\n                      {\n                        color: '#fff',\n                        padding: 10,\n                        width: '100%',\n                        backgroundColor: '#00429d',\n                        lineHeight: 35,\n                      },\n                    ]}>\n                    Go Back Home\n                  </Text>\n                </Link>\n\n                <Switch>\n                  <Route path=\"/country/:country\">\n                    <Country />\n                  </Route>\n                  <Route path=\"/\">\n                    <Home />\n                  </Route>\n                  <Redirect to=\"/\" />\n                </Switch>\n              </>\n            )}\n          </View>\n        </ScrollView>\n      </Router>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#222222',\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n});\n\nexport default subscribe(App, [state]);\n","import React, {useEffect, useState} from 'react';\nimport {StyleSheet, Text, View, ActivityIndicator} from 'react-native';\nimport {useParams} from 'react-router-dom';\nimport {\n  LineChart,\n  BarChart,\n  format,\n  numberWithCommas,\n  Box,\n  L,\n  V,\n} from './Chart';\nimport state from './state';\n\nconst Country = () => {\n  let {country} = useParams();\n  const [barData, setBarData] = useState(null);\n  const [dailyInfections, setDailyInfections] = useState(null);\n  const [timeData, setTimeData] = useState(null);\n  const [data, setCountryData] = useState(null);\n\n  useEffect(() => {\n    const {countries, time} = state.state;\n    const countryTimeData = time.countries.find((i) => i.country === country);\n    const countryData = countries.find((i) => i.country === country);\n    if (!countryData) {\n      setCountryData(0);\n    } else {\n      setCountryData(countryData);\n      const {confirmed, recovered, deaths} = countryData;\n      const barChartData = {\n        labels: ['Total', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: country,\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderColor: 'rgba(0,0,0,1)',\n            borderWidth: 2,\n            data: [confirmed, recovered, deaths],\n          },\n        ],\n      };\n      setBarData(barChartData);\n    }\n    if (!countryTimeData) {\n      setTimeData(0);\n    } else {\n      const sets = countryTimeData.locations[0].dates.map((i, index) => {\n        let total = 0;\n        const time = Object.keys(i)[0];\n        countryTimeData.locations.forEach((location) => {\n          total += location.dates[index][time];\n        });\n        return {y: time, x: total};\n      });\n      const labels = sets.map((i) => {\n        const d = new Date(i.y.replace(/-/g, '/'));\n        const day = d.getDate();\n        const month = d.getMonth() + 1;\n\n        return `${format(day)}.${format(month)}`;\n      });\n      const lineChartData = {\n        labels,\n        datasets: [\n          {\n            label: 'Confirmed Cases',\n            backgroundColor: 'rgba(75,192,192,1)',\n            borderWidth: 2,\n            data: sets.map((i) => i.x),\n          },\n        ],\n      };\n      setTimeData(lineChartData);\n      const daily = sets.map(\n        (i, index) =>\n          parseInt(i.x) - parseInt((sets[index - 1] && sets[index - 1].x) || 0),\n      );\n      const dailyInfectionsData = {\n        labels: labels.slice(1),\n        datasets: [\n          {\n            label: 'Daily Cases',\n            backgroundColor: '#d45757',\n            borderWidth: 2,\n            data: daily.slice(1),\n          },\n        ],\n      };\n      setDailyInfections(dailyInfectionsData);\n    }\n  }, [country]);\n\n  if (data === null) {\n    return (\n      <ActivityIndicator\n        size=\"large\"\n        style={{\n          marginTop: 40,\n          alignSelf: 'center',\n        }}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {data === 0 ? (\n        <Text style={[styles.title, styles.text]}>\n          No country by the name {country} was found\n        </Text>\n      ) : (\n        <>\n          <Box\n            style={{\n              borderBottomColor: '#fff',\n              borderBottomStyle: 'solid',\n              borderBottomWidth: 1,\n            }}>\n            <Text style={[styles.title, styles.text]}>{country}</Text>\n            <Text key={`Total cases: ${data.confirmed}`} style={styles.text}>\n              <L t=\"Total cases: \" />\n              <V t={numberWithCommas(data.confirmed)} />\n            </Text>\n            <Text key={`Total deaths: ${data.deaths}`} style={styles.text}>\n              <L t=\"Total deaths: \" />\n              <V t={numberWithCommas(data.deaths)} />\n            </Text>\n            <Text\n              key={`Total recovered: ${data.recovered}`}\n              style={styles.text}>\n              <L t=\"Total recovered: \" />\n              <V t={numberWithCommas(data.recovered)} />\n            </Text>\n            {!!data.population && (\n              <Text key={`population: ${data.population}`} style={styles.text}>\n                <L t=\"Population: \" />\n                <V t={numberWithCommas(data.population)} />\n              </Text>\n            )}\n            {!!data.precentage && (\n              <Text key={`population: ${data.precentage}`} style={styles.text}>\n                <L t=\"Population infected: \" />\n                <V t={data.precentage + '%'} />\n              </Text>\n            )}\n            <Text\n              key={`updated on: ${state.state.lastUpdated.toDateString()}`}\n              style={styles.text}>\n              <L t=\"Updated on: \" />\n              <V t={state.state.lastUpdated.toDateString()} />\n            </Text>\n          </Box>\n          {!!timeData && (\n            <View style={{width: '80%', marginBottom: 20}}>\n              <LineChart data={timeData} title />\n              {dailyInfections && <LineChart data={dailyInfections} title />}\n              <BarChart\n                data={barData}\n                colors={['#ff2222', '#00ff00', '#ccc']}\n              />\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  text: {\n    color: '#fff',\n    marginBottom: 5,\n  },\n  country: {\n    width: '100%',\n    marginBottom: 10,\n    borderBottomColor: '#fff',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 1,\n  },\n});\n\nexport default Country;\n","import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  ActivityIndicator,\n  TextInput,\n} from 'react-native';\nimport {Link} from 'react-router-dom';\nimport Chart, {LineChart, numberWithCommas, Box, L, V} from './Chart';\nimport state from './state';\nimport Map from './Map';\n\nconst updateSearch = (search = '') => {\n  state.setState({search});\n  if (search.length) {\n    const filteredCountries = state.state.countries.filter((i) =>\n      i.country.toLowerCase().includes(search.toLowerCase()),\n    );\n    state.setState({filteredCountries});\n  } else {\n    state.setState({filteredCountries: state.state.countries});\n  }\n};\nconst Home = () => {\n  const {\n    lastUpdated,\n    lineChartData,\n    allCases,\n    allDeaths,\n    allRecovered,\n    filteredCountries,\n    search,\n    chartData,\n  } = state.state;\n\n  return (\n    <View style={styles.container}>\n      {!lastUpdated ? (\n        <ActivityIndicator\n          size=\"large\"\n          style={{\n            marginTop: 40,\n            alignSelf: 'center',\n          }}\n        />\n      ) : (\n        <>\n          <Box\n            style={{\n              borderBottomColor: '#fff',\n              borderBottomStyle: 'solid',\n              borderBottomWidth: 1,\n            }}>\n            <Text style={[styles.title, styles.text]}>Worldwide</Text>\n            <Text key={`Total cases: ${allCases}`} style={styles.text}>\n              <L t=\"Total cases: \" />\n              <V t={allCases} />\n            </Text>\n            <Text key={`Total deaths: ${allDeaths}`} style={styles.text}>\n              <L t=\"Total deaths: \" />\n              <V t={allDeaths} />\n            </Text>\n            <Text key={`Total recovered: ${allRecovered}`} style={styles.text}>\n              <L t=\"Total recovered: \" />\n              <V t={allRecovered} />\n            </Text>\n            <Text\n              key={`updated on: ${lastUpdated.toDateString()}`}\n              style={styles.text}>\n              <L t=\"Updated on: \" />\n              <V t={lastUpdated.toDateString()} />\n            </Text>\n          </Box>\n          <View\n            style={{\n              width: '80%',\n              marginBottom: 20,\n              flexDirection: 'column',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Chart data={chartData} />\n            <LineChart data={lineChartData} legend />\n            {/* <LineChart data={lineChartData} legend logarithmic /> */}\n          </View>\n          <Map />\n          <TextInput\n            style={{\n              height: 40,\n              borderColor: 'gray',\n              borderWidth: 1,\n              backgroundColor: '#ccc',\n              width: '80%',\n              borderRadius: 3,\n              paddingLeft: 8,\n              paddingRight: 8,\n            }}\n            placeholder=\"Type Country Name Here...\"\n            onChangeText={updateSearch}\n            value={search || ''}\n          />\n          <Box>\n            {filteredCountries.length < 1 ? (\n              <Text style={[styles.title, styles.text]}>\n                No counteries were found.. try another search term\n              </Text>\n            ) : (\n              filteredCountries.map(\n                (\n                  {\n                    country,\n                    confirmed,\n                    deaths,\n                    recovered,\n                    population,\n                    precentage,\n                  },\n                  index,\n                ) => {\n                  // if (!population) {\n                  //   console.log(\n                  //     '--¯_(ツ)_/¯-----------country----------',\n                  //     country,\n                  //   );\n                  // }\n                  return (\n                    <Link to={`country/${country}`} key={index}>\n                      <View style={styles.country}>\n                        <View>\n                          <Text style={[styles.title, styles.text]}>\n                            {country}\n                          </Text>\n                          <Text style={styles.text}>\n                            <L t=\"Cases:\" />{' '}\n                            <V t={numberWithCommas(confirmed)} />\n                          </Text>\n                          <Text style={styles.text}>\n                            <L t=\"Deaths: \" />\n                            <V t={numberWithCommas(deaths)} />\n                          </Text>\n                          <Text style={styles.text}>\n                            <L t=\"Recovered: \" />\n                            <V t={numberWithCommas(recovered)} />\n                          </Text>\n\n                          {!!population && (\n                            <Text style={styles.text}>\n                              <L t=\"Population: \" />\n                              <V t={numberWithCommas(population)} />\n                            </Text>\n                          )}\n                          {!!precentage && (\n                            <Text style={styles.text}>\n                              <L t=\"Population infected: \" />\n                              <V t={precentage + '%'} />\n                            </Text>\n                          )}\n                        </View>\n                        <Text\n                          style={[\n                            {\n                              alignSelf: 'flex-end',\n                              color: '#fff',\n                              padding: 10,\n                              width: '100%',\n                              backgroundColor: '#00429d',\n                              lineHeight: 35,\n                              borderRadius: 3,\n                              textAlign: 'center',\n                              shadowColor: '#000',\n                              shadowOffset: {width: 0, height: 1},\n                              shadowOpacity: 0.8,\n                              shadowRadius: 2,\n                              elevation: 5,\n                            },\n                          ]}>\n                          See country stats\n                        </Text>\n                      </View>\n                    </Link>\n                  );\n                },\n              )\n            )}\n          </Box>\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    minHeight: '100%',\n    width: '100%',\n  },\n  title: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  text: {\n    color: '#fff',\n    marginBottom: 5,\n  },\n  country: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    width: '100%',\n    marginBottom: 10,\n    borderBottomColor: '#fff',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 1,\n    backgroundColor: 'darkcyan',\n    borderRadius: 3,\n    padding: 10,\n\n    shadowColor: '#000',\n    shadowOffset: {width: 0, height: 1},\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 5,\n  },\n});\n\nexport default Home;\n","import React, {Component} from 'react';\nimport {View} from 'react-native';\nimport {renderToStaticMarkup} from 'react-dom/server';\nimport {divIcon} from 'leaflet';\nimport {Map, TileLayer, Marker, Popup} from 'react-leaflet';\nimport state from './state';\nimport {numberWithCommas} from './Chart';\n\nfunction averageGeolocation(coords) {\n  if (coords.length === 1) {\n    return coords[0];\n  }\n\n  let x = 0.0;\n  let y = 0.0;\n  let z = 0.0;\n\n  for (let coord of coords) {\n    let lat = (coord.lat * Math.PI) / 180;\n    let lon = (coord.lon * Math.PI) / 180;\n\n    x += Math.cos(lat) * Math.cos(lon);\n    y += Math.cos(lat) * Math.sin(lon);\n    z += Math.sin(lat);\n  }\n\n  let total = coords.length;\n\n  x = x / total;\n  y = y / total;\n  z = z / total;\n\n  let centrallon = Math.atan2(y, x);\n  let centralSquareRoot = Math.sqrt(x * x + y * y);\n  let centrallat = Math.atan2(z, centralSquareRoot);\n\n  return {\n    lat: (centrallat * 180) / Math.PI,\n    lon: (centrallon * 180) / Math.PI,\n  };\n}\n\nconst ZOOM_4 = 1058;\nconst ZOOM_5 = 1558;\n\nconst RED = '#f00c32';\nconst GREEN = '#08cf47';\nconst GREY = '#30242d';\nclass Mapx extends Component {\n  state = {\n    lat: 51.165690999999995,\n    lng: 10.451526,\n    zoom: 3,\n  };\n  mapRef = React.createRef();\n  handleZoom = () => {\n    const zoom = this.mapRef && this.mapRef.current.leafletElement.getZoom();\n    if (zoom) {\n      this.setState({zoom});\n    }\n  };\n  render() {\n    console.log(\n      '--¯_(ツ)_/¯-----------this.state.zoom----------',\n      this.state.zoom,\n    );\n    return (\n      <View\n        style={{\n          width: '90%',\n          position: 'relative',\n          marginBottom: 20,\n          marginTop: 20,\n        }}>\n        <Map\n          minZoom={2}\n          ref={this.mapRef}\n          onzoomend={this.handleZoom}\n          center={[this.state.lat, this.state.lng]}\n          zoom={this.state.zoom}\n          style={{width: '100%', position: 'relative', height: 590}}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n            url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\"\n          />\n          {!!state.state.countries &&\n            state.state.countries.map((data) => {\n              const {\n                country,\n                confirmed,\n                deaths,\n                recovered,\n                population,\n                locations,\n              } = data;\n              let cords;\n              if (locations.length > 1) {\n                cords = locations.find((i) => i.state === '');\n                if (!cords) {\n                  cords = averageGeolocation(locations);\n                }\n              } else {\n                cords = locations[0];\n              }\n              const point = [cords.lat, cords.lon];\n\n              let confirmedWidth = (\n                (confirmed / 100 / 2 / 10) *\n                (this.state.zoom * 2)\n              ).toFixed(2);\n\n              confirmedWidth = confirmedWidth > 40 ? confirmedWidth : 40;\n              let recoveredWidth = ((recovered / confirmed) * 100).toFixed(2);\n              let deathsWidth = ((deaths / confirmed) * 100).toFixed(2);\n\n              if (this.state.zoom < 5) {\n                confirmedWidth =\n                  confirmedWidth < ZOOM_4 ? confirmedWidth : ZOOM_4;\n              } else {\n                confirmedWidth =\n                  confirmedWidth < ZOOM_5 ? confirmedWidth : ZOOM_5;\n              }\n              //   recoveredWidth = recoveredWidth < 1000 ? recoveredWidth : 1000;\n              //   deathsWidth = deathsWidth < 900 ? deathsWidth : 900;\n              const outerCircle = {\n                backgroundColor: RED,\n                color: RED,\n                width: `${confirmedWidth}%`,\n                height: `${confirmedWidth}%`,\n                borderRadius: 100,\n                textAlign: 'center',\n                marginLeft: `-${confirmedWidth / 2}%`,\n                marginTop: `-${confirmedWidth / 2}%`,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                position: 'relative',\n              };\n              const recoveredCircle = {\n                zIndex: 600,\n                backgroundColor: GREEN,\n                color: GREEN,\n                width: `${recoveredWidth}%`,\n                height: `${recoveredWidth}%`,\n                borderRadius: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                margin: '0 auto',\n              };\n              const deathCircle = {\n                zIndex: 601,\n                position: 'absolute',\n                backgroundColor: GREY,\n                color: GREY,\n                display: 'flex',\n                width: `${deathsWidth}%`,\n                height: `${deathsWidth}%`,\n                borderRadius: 100,\n                margin: '0 auto',\n              };\n              const iconMarkup = renderToStaticMarkup(\n                <div style={outerCircle}>\n                  <div style={recoveredCircle}></div>\n                  <div style={deathCircle}></div>\n                </div>,\n              );\n              const customMarkerIcon = divIcon({\n                html: iconMarkup,\n              });\n              return (\n                <Marker position={point} key={country} icon={customMarkerIcon}>\n                  <Popup>\n                    <span>\n                      <b>{country}</b>\n                    </span>\n                    <br />\n                    <span>\n                      <span\n                        style={{\n                          backgroundColor: RED,\n                          marginTop: -5,\n                          width: 5,\n                          height: 5,\n                          borderRadius: 100,\n                          display: 'inline-block',\n                        }}>\n                        {' '}\n                      </span>{' '}\n                      Cases: {numberWithCommas(confirmed)}\n                    </span>\n                    <br />\n                    <span>\n                      <span\n                        style={{\n                          backgroundColor: GREEN,\n                          marginTop: -5,\n                          width: 5,\n                          height: 5,\n                          borderRadius: 100,\n                          display: 'inline-block',\n                        }}>\n                        {' '}\n                      </span>\n                      Recovered: {numberWithCommas(recovered)}\n                    </span>\n                    <br />\n                    <span>\n                      <span\n                        style={{\n                          backgroundColor: GREY,\n                          marginTop: -5,\n                          width: 5,\n                          height: 5,\n                          borderRadius: 100,\n                          display: 'inline-block',\n                        }}>\n                        {' '}\n                      </span>\n                      Deaths: {numberWithCommas(deaths)}\n                    </span>\n                    <br />\n                    {population && (\n                      <span>Population: {numberWithCommas(population)}</span>\n                    )}\n                  </Popup>\n                </Marker>\n              );\n            })}\n        </Map>\n      </View>\n    );\n  }\n}\nexport default Mapx;\n","const moment = require('moment');\nconst request = require('request');\nconst csv = require('csvtojson');\n// const objectToFile = require('object-to-file');\nexport const d = {};\n// var objectToFiledb = new objectToFile.default('testing-runkit');\n// const db = {\n//   fetch: async (key) => {\n//     const r = localStorage.getItem(key);\n//     // const r = await objectToFiledb.read(key);\n//     return !r ? undefined : r;\n//   },\n//   set: async (key, data) => {\n//     // const r = await objectToFiledb.push(key, data);\n//     const r = localStorage.setItem(key, JSON.stringify(data));\n//     return !r ? undefined : r;\n//   },\n//   delete: async (key) => {\n//     const r = localStorage.removeItem(key);\n//     // const r = await objectToFiledb.delete(key);\n//     return !r ? undefined : r;\n//   },\n// };\n\nclass Covid19 {\n  async getData(date) {\n    let data = {};\n    if (date != undefined) {\n      date = moment(date, 'MM-DD-YYYY').format('MM-DD-YYYY');\n      data = await this.fetchData(date);\n    } else {\n      date = moment().format('MM-DD-YYYY');\n      data = await this.fetchData(date);\n    }\n    return data;\n  }\n\n  async getTimeSeriesData(type) {\n    var data = {};\n    let date = moment().format('MM-DD-YYYY');\n    type = type.toLowerCase();\n    data = d[type];\n    if (data === undefined || (data && data.lastUpdated !== date)) {\n      await this.addRemoteTimesSeries(type);\n      data = d[type];\n    }\n    return data;\n  }\n\n  async fetchData(date) {\n    var data = {};\n    //console.log(`Fetching data from: ${date}`)\n    data = d[date];\n    while (\n      data === undefined &&\n      moment(date, 'MM-DD-YYYY') >= moment('01-22-2020', 'MM-DD-YYYY')\n    ) {\n      //console.log(`LOCAL data from ${date} not found...attempting to fetch REMOTE data from ${date}`)\n      await this.addRemoteDailyReports(date);\n      data = d[date];\n      if (data == undefined) {\n        //console.log(`REMOTE data from ${date} not found...attempting to fetch LOCAL data from one day before.`)\n        date = moment(date, 'MM-DD-YYYY')\n          .subtract(1, 'days')\n          .format('MM-DD-YYYY');\n        data = d[date];\n        if (data === undefined) {\n          //console.log(`LOCAL data from ${date} not found...attempting to fetch REMOTE data from one day before.`)\n          await this.addRemoteDailyReports(date);\n          data = d[date];\n        }\n      }\n    }\n    if (data === undefined) {\n      data = {error: 'Data not found. Plase try again.'};\n    }\n    return data;\n  }\n\n  async addRemoteDailyReports(date) {\n    let locations = [];\n    await csv()\n      .fromStream(\n        request.get(\n          `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/${date}.csv`,\n        ),\n      )\n      .subscribe(async (json) => {\n        return new Promise((resolve, reject) => {\n          var obj = {};\n          if (\n            moment(date, 'MM-DD-YYYY') <= moment('03-22-2020', 'MM-DD-YYYY')\n          ) {\n            obj = {\n              country: json['Country/Region'] || '',\n              state: json['Province/State'] || '',\n              lat: json['Latitude'] || '0.0',\n              lon: json['Longitude'] || '0.0',\n              lastUpdate: json['Last Update'] || '',\n              confirmed: parseInt(json['Confirmed']) || 0,\n              deaths: parseInt(json['Deaths']) || 0,\n              recovered: parseInt(json['Recovered']) || 0,\n            };\n          } else {\n            // console.log('after 03-22-2020');\n            obj = {\n              country: json['Country_Region'] || '',\n              state: json['Province_State'] || '',\n              lat: json['Lat'] || '0.0',\n              lon: json['Long_'] || '0.0',\n              lastUpdate: json['Last_Update'] || '',\n              confirmed: parseInt(json['Confirmed']) || 0,\n              deaths: parseInt(json['Deaths']) || 0,\n              recovered: parseInt(json['Recovered']) || 0,\n            };\n          }\n          locations.push(obj);\n          resolve();\n        });\n      })\n      .then(async (json) => {\n        if (locations.length > 0) {\n          let countries = await this.groupBy('country', locations, date);\n          delete d[date];\n          d[date] = countries;\n        }\n      });\n  }\n\n  async groupBy(key, array, date) {\n    var json = {};\n    var result = [];\n    var totalConfirmed = 0;\n    var totalRecovered = 0;\n    var totalDeaths = 0;\n\n    var allConfirmed = 0;\n    var allRecovered = 0;\n    var allDeaths = 0;\n\n    json.countries = result;\n\n    for (var i = 0; i < array.length; i++) {\n      var added = false;\n      totalConfirmed = 0;\n      totalRecovered = 0;\n      totalDeaths = 0;\n\n      allConfirmed += parseInt(array[i].confirmed);\n      allRecovered += parseInt(array[i].recovered);\n      allDeaths += parseInt(array[i].deaths);\n\n      // adds the reset of the locations for the country\n      for (var j = 0; j < result.length; j++) {\n        if (result[j][key] == array[i][key]) {\n          totalConfirmed += parseInt(array[i].confirmed);\n          result[j].confirmed = totalConfirmed + parseInt(result[j].confirmed);\n\n          totalRecovered += parseInt(array[i].recovered);\n          result[j].recovered = totalRecovered + parseInt(result[j].recovered);\n\n          totalDeaths += parseInt(array[i].deaths);\n          result[j].deaths = totalDeaths + parseInt(result[j].deaths);\n\n          result[j].locations.push(array[i]);\n          added = true;\n          break;\n        }\n      }\n      // adds the first location for the country\n      if (!added) {\n        totalConfirmed = 0;\n        totalRecovered = 0;\n        totalDeaths = 0;\n        var entry = {locations: []};\n\n        totalConfirmed += parseInt(array[i].confirmed);\n        entry['confirmed'] = totalConfirmed;\n\n        totalRecovered += parseInt(array[i].recovered);\n        entry['recovered'] = totalRecovered;\n\n        totalDeaths += parseInt(array[i].deaths);\n        entry['deaths'] = totalDeaths;\n\n        entry[key] = array[i][key];\n        entry['lat'] = array[i]['lat'];\n        entry['lon'] = array[i]['lon'];\n\n        entry.locations.push(array[i]);\n        result.push(entry);\n      }\n    }\n\n    json.date = date;\n    json.confirmed = allConfirmed;\n    json.recovered = allRecovered;\n    json.deaths = allDeaths;\n\n    return json;\n  }\n\n  async addRemoteTimesSeries(type) {\n    var countries = [];\n    let min = moment('2020-03-11');\n    let max = moment();\n    //let initCapType = type.charAt(0).toUpperCase() + type.slice(1)\n    await csv()\n      .fromStream(\n        request.get(\n          `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_${type}_global.csv`,\n        ),\n      )\n      .subscribe(async (json) => {\n        return new Promise((resolve, reject) => {\n          var location = {\n            country: json['Country/Region'] || '',\n            state: json['Province/State'] || '',\n            lat: json['Lat'] || '0.0',\n            lon: json['Long'] || '0.0',\n          };\n          let dates = [];\n          for (\n            var m = moment(min);\n            m.diff(max, 'days') <= 0;\n            m.add(1, 'days')\n          ) {\n            let date = m.format('M/D/YY');\n            if (json[date] != undefined) {\n              let value = parseInt(json[date]) || 0;\n              let dateObj = {\n                [m.format('MM-DD-YYYY')]: value,\n              };\n              dates.push(dateObj);\n            }\n          }\n\n          if (dates.length > 0) {\n            let lastDate = dates[dates.length - 1];\n            location.total = Object.values(lastDate)[0];\n          }\n\n          location.dates = dates;\n          countries.push(location);\n          resolve();\n        });\n      })\n      .then(async (json) => {\n        if (countries.length > 0) {\n          countries = await this.groupByTimesSeries('country', countries);\n\n          delete d[type];\n          d[type] = countries;\n        }\n      });\n  }\n\n  async groupByTimesSeries(key, array) {\n    let root = {};\n    var locations = [];\n    var grandTotal = 0;\n\n    root.countries = locations;\n\n    for (var i = 0; i < array.length; i++) {\n      var total = 0;\n      var added = false;\n      // adds the reset of the locations for the country\n      for (var j = 0; j < locations.length; j++) {\n        if (locations[j][key] == array[i][key]) {\n          total += parseInt(array[i].total) || 0;\n          locations[j].locations.push(array[i]);\n          added = true;\n          break;\n        }\n      }\n      // adds the first location for the country\n      if (!added) {\n        var entry = {locations: []};\n        entry[key] = array[i][key];\n        entry['lat'] = array[i]['lat'];\n        entry['lon'] = array[i]['lon'];\n        total += parseInt(array[i]['total']) || 0;\n        entry.locations.push(array[i]);\n        locations.push(entry);\n      }\n\n      locations[j].total = total;\n      grandTotal += total;\n    }\n\n    root.lastUpdated = moment().format('MM-DD-YYYY');\n    root.total = grandTotal;\n    return root;\n  }\n}\n\nmodule.exports = Covid19;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {Text, View} from 'react-native';\nimport {Bar, Line, Pie} from 'react-chartjs-2';\n\nexport const format = (i) => (i < 10 ? `0${i}` : i);\nexport const colors = [\n  '#ff0029',\n  '#377eb8',\n  '#7f80cd',\n  '#66a61e',\n  '#984ea3',\n  '#00d2d5',\n  '#ff7f00',\n  '#af8d00',\n  '#b3e900',\n  '#fec254',\n  '#ccebc5',\n  '#a63603',\n  '#016c59',\n  '#e7298a',\n  '#c994c7',\n  '#dfdf00',\n  '#df00df',\n  '#80ff80',\n];\nconst logarithmicConfig = {\n  type: 'logarithmic',\n  ticks: {\n    min: 0.1, //minimum tick\n    max: 1000, //maximum tick\n    callback: function (value, index, values) {\n      return Number(value.toString()); //pass tick values as a string into Number function\n    },\n  },\n  afterBuildTicks: function (chartObj) {\n    //Build ticks labelling as per your need\n    chartObj.ticks = [];\n    chartObj.ticks.push(0.1);\n    chartObj.ticks.push(1);\n    chartObj.ticks.push(10);\n    chartObj.ticks.push(100);\n    chartObj.ticks.push(1000);\n  },\n};\n\nexport const Box = ({children, style}) => (\n  <View\n    style={[\n      {\n        margin: 10,\n        padding: 10,\n        width: '80%',\n      },\n      style,\n    ]}>\n    {children}\n  </View>\n);\n\nexport const L = ({t}) => (\n  <Text\n    style={{\n      color: '#ddd',\n    }}>\n    {t}\n  </Text>\n);\nexport const V = ({t}) => (\n  <Text\n    style={{\n      color: '#fff',\n    }}>\n    {t}\n  </Text>\n);\n\nexport function numberWithCommas(x, shouldRound) {\n  const s = x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  if (shouldRound && x > 999) {\n    let decimal = '';\n    if (x < 2000 && s.length > 4 && s.slice(-3) !== '000') {\n      decimal = `.${s.slice(-3)[0]}`;\n    }\n\n    return `${s.slice(0, s.length - 4)}${decimal}K`;\n  }\n  return s;\n}\n\nexport const LineChart = ({data, legend, title, logarithmic}) => {\n  const options = {\n    title: {\n      display: logarithmic || !!title,\n      text: logarithmic ? 'Logarithmic chart' : data.datasets[0].label,\n      fontSize: 20,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            callback: function (value, index, values) {\n              return numberWithCommas(value, true);\n            },\n          },\n        },\n      ],\n    },\n    legend: {\n      display: !!legend,\n      position: 'bottom',\n      labels: {\n        fontColor: 'white',\n        boxWidth: 20,\n        padding: 20,\n      },\n    },\n  };\n  return (\n    <View\n      style={{marginTop: 20, height: 450, width: '100%', position: 'relative'}}>\n      <Line\n        data={data}\n        options={logarithmic ? {...logarithmicConfig, ...options} : options}\n      />\n    </View>\n  );\n};\nexport const BarChart = ({data, colors: c}) => {\n  data.datasets[0].backgroundColor = c || colors;\n  data.datasets[0].hoverBackgroundColor = c || colors;\n  return (\n    <View\n      style={{\n        marginTop: 20,\n        height: '40vh',\n        width: '100%',\n        position: 'relative',\n      }}>\n      <Bar\n        data={data}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  callback: function (value, index, values) {\n                    return numberWithCommas(value, true);\n                  },\n                },\n              },\n            ],\n          },\n          title: {\n            display: false,\n            // text: data.datasets[0].label,\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n            position: 'right',\n          },\n        }}\n      />\n    </View>\n  );\n};\n\nexport const PieChart = ({data}) => {\n  data.datasets[0].backgroundColor = colors;\n  data.datasets[0].hoverBackgroundColor = colors;\n  return (\n    <View style={{width: '100%'}}>\n      <Pie\n        data={data}\n        options={{\n          title: {\n            display: false,\n            text: data.datasets[0].label,\n            fontSize: 16,\n          },\n          legend: {\n            display: false,\n          },\n          // legend: {\n          //   display: true,\n          //   position: 'right',\n          // },\n        }}\n      />\n      {/*\n      <Doughnut\n        data={data}\n        options={{\n          title: {\n            display: true,\n            text: 'Corona cases per country',\n            fontSize: 20,\n          },\n          legend: {\n            display: true,\n            position: 'right',\n          },\n        }}\n      /> */}\n    </View>\n  );\n};\nconst Chart = (props) => {\n  return (\n    <>\n      <BarChart {...props} />\n      {/* <PieChart {...props} /> */}\n    </>\n  );\n};\nexport default Chart;\n","import {State} from 'jstates-react';\n\nconst state = new State('state', {\n  lastUpdated: null,\n  search: '',\n});\n\nexport default state;\n"],"sourceRoot":""}